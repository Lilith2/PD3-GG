#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Dumpster_01_Open

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_DumpsterStages_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Dumpster_01_Open.BP_Dumpster_01_Open_C
// 0x0070 (0x0360 - 0x02F0)
class ABP_Dumpster_01_Open_C final : public ASBZReplicatedIntStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZSecuredBagVisualizeComponent*       SBZSecuredBagVisualize;                            // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionDoor;                                     // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation08;                                     // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation07;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation06;                                     // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation05;                                     // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation04;                                     // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation03;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation02;                                     // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BagLocation01;                                     // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	Enum_DumpsterStages                           States;                                            // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Dumpster_01_Open(int32 EntryPoint);
	void OnStateChanged(int32 OldState, int32 NewState, bool bDoCosmetics);
	void UserConstructionScript();
	void SetStateFunction(Enum_DumpsterStages State_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Dumpster_01_Open_C">();
	}
	static class ABP_Dumpster_01_Open_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Dumpster_01_Open_C>();
	}
};
static_assert(alignof(ABP_Dumpster_01_Open_C) == 0x000008, "Wrong alignment on ABP_Dumpster_01_Open_C");
static_assert(sizeof(ABP_Dumpster_01_Open_C) == 0x000360, "Wrong size on ABP_Dumpster_01_Open_C");
static_assert(offsetof(ABP_Dumpster_01_Open_C, UberGraphFrame) == 0x0002F0, "Member 'ABP_Dumpster_01_Open_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, SBZSecuredBagVisualize) == 0x0002F8, "Member 'ABP_Dumpster_01_Open_C::SBZSecuredBagVisualize' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, CollisionDoor) == 0x000300, "Member 'ABP_Dumpster_01_Open_C::CollisionDoor' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation08) == 0x000308, "Member 'ABP_Dumpster_01_Open_C::BagLocation08' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation07) == 0x000310, "Member 'ABP_Dumpster_01_Open_C::BagLocation07' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation06) == 0x000318, "Member 'ABP_Dumpster_01_Open_C::BagLocation06' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation05) == 0x000320, "Member 'ABP_Dumpster_01_Open_C::BagLocation05' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation04) == 0x000328, "Member 'ABP_Dumpster_01_Open_C::BagLocation04' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation03) == 0x000330, "Member 'ABP_Dumpster_01_Open_C::BagLocation03' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation02) == 0x000338, "Member 'ABP_Dumpster_01_Open_C::BagLocation02' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, BagLocation01) == 0x000340, "Member 'ABP_Dumpster_01_Open_C::BagLocation01' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, Mesh) == 0x000348, "Member 'ABP_Dumpster_01_Open_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, DefaultSceneRoot) == 0x000350, "Member 'ABP_Dumpster_01_Open_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Dumpster_01_Open_C, States) == 0x000358, "Member 'ABP_Dumpster_01_Open_C::States' has a wrong offset!");

}

