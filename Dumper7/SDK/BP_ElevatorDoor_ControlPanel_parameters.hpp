#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ElevatorDoor_ControlPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.ExecuteUbergraph_BP_ElevatorDoor_ControlPanel
// 0x0080 (0x0080 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZMarkerDataAsset*              Temp_object_Variable;                              // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZMarkerDataAsset*              Temp_object_Variable_1;                            // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStateToChangeTo;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bState;                 // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bDoCosmetics;           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_73[0x1];                                       // 0x0073(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USBZMarkerDataAsset*              K2Node_Select_Default;                             // 0x0078(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel) == 0x000008, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel) == 0x000080, "Wrong size on BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, EntryPoint) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, Temp_struct_Variable) == 0x000008, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, Temp_delegate_Variable) == 0x000018, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, Temp_bool_Variable) == 0x00002C, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, Temp_object_Variable) == 0x000030, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, Temp_object_Variable_1) == 0x000038, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_Event_bStateToChangeTo) == 0x000040, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_Event_bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_Event_bDoCosmetics) == 0x000041, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_Interactable_1) == 0x000048, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_Interactor_1) == 0x000050, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x000058, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_Interactable) == 0x000060, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_Interactor) == 0x000068, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000070, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_bState) == 0x000071, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_bState' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_ComponentBoundEvent_bDoCosmetics) == 0x000072, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_ComponentBoundEvent_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, CallFunc_PostEvent_ReturnValue) == 0x000074, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel, K2Node_Select_Default) == 0x000078, "Member 'BP_ElevatorDoor_ControlPanel_C_ExecuteUbergraph_BP_ElevatorDoor_ControlPanel::K2Node_Select_Default' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature final
{
public:
	bool                                          bState_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature) == 0x000001, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature) == 0x000002, "Wrong size on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature, bState_0) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature::bState_0' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature, bDoCosmetics) == 0x000001, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature::bDoCosmetics' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ElevatorDoor_ControlPanel_C_BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.OnStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_OnStateChanged final
{
public:
	bool                                          bStateToChangeTo;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_OnStateChanged");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_OnStateChanged) == 0x000002, "Wrong size on BP_ElevatorDoor_ControlPanel_C_OnStateChanged");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_OnStateChanged, bStateToChangeTo) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_OnStateChanged::bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_OnStateChanged, bDoCosmetics) == 0x000001, "Member 'BP_ElevatorDoor_ControlPanel_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.SetInteractionEnable
// 0x0002 (0x0002 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable final
{
public:
	bool                                          Interaction_Enabled;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WaypointEnabled;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable) == 0x000001, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable) == 0x000002, "Wrong size on BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable, Interaction_Enabled) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable::Interaction_Enabled' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable, WaypointEnabled) == 0x000001, "Member 'BP_ElevatorDoor_ControlPanel_C_SetInteractionEnable::WaypointEnabled' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.PlayTurnOff
// 0x0004 (0x0004 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_PlayTurnOff final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOff) == 0x000004, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_PlayTurnOff");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOff) == 0x000004, "Wrong size on BP_ElevatorDoor_ControlPanel_C_PlayTurnOff");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOff, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_PlayTurnOff::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.PlayTurnOn
// 0x0004 (0x0004 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_PlayTurnOn final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOn) == 0x000004, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_PlayTurnOn");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOn) == 0x000004, "Wrong size on BP_ElevatorDoor_ControlPanel_C_PlayTurnOn");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_PlayTurnOn, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_PlayTurnOn::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C.SetMarker
// 0x0048 (0x0048 - 0x0000)
struct BP_ElevatorDoor_ControlPanel_C_SetMarker final
{
public:
	const class USBZMarkerDataAsset*              MarkerDataAsset;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddLocalMarker_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ElevatorDoor_ControlPanel_C_SetMarker) == 0x000008, "Wrong alignment on BP_ElevatorDoor_ControlPanel_C_SetMarker");
static_assert(sizeof(BP_ElevatorDoor_ControlPanel_C_SetMarker) == 0x000048, "Wrong size on BP_ElevatorDoor_ControlPanel_C_SetMarker");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, MarkerDataAsset) == 0x000000, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::MarkerDataAsset' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_GetRightVector_ReturnValue) == 0x00000C, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000018, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_AddLocalMarker_ReturnValue) == 0x00003C, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_AddLocalMarker_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ElevatorDoor_ControlPanel_C_SetMarker, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_ElevatorDoor_ControlPanel_C_SetMarker::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

}

