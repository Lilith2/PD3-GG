#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Breakable_ATM_01

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.ExecuteUbergraph_BP_Breakable_ATM_01
// 0x0318 (0x0318 - 0x0000)
struct BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0038(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0050(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0060(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0088(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x00B0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Current_Value_4379B75345C825CF61A82D8543386D8E_Variable; // 0x00CC(0x0004)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initialized_4379B75345C825CF61A82D8543386D8E_Variable; // 0x00D0(0x0001)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00D8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZCosmeticDestructionType                   K2Node_ComponentBoundEvent_Type;                   // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZCosmeticDestructionContext         K2Node_ComponentBoundEvent_HitContext;             // 0x00F4(0x0030)(ConstParm, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreakableMachineState                     K2Node_Event_OldState;                             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreakableMachineState                     K2Node_Event_NewState;                             // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x012E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x012F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x0138(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0154(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x0218(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_MathExpression_ReturnValue;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0264(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent;  // 0x02F8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState;            // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTimelineLength_ReturnValue_1;          // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_3;                // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_4;                // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01");
static_assert(sizeof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01) == 0x000318, "Wrong size on BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, EntryPoint) == 0x000000, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_struct_Variable) == 0x000018, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_delegate_Variable) == 0x000038, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_struct_Variable_1) == 0x000050, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_delegate_Variable_1) == 0x000060, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_struct_Variable_2) == 0x000078, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_delegate_Variable_2) == 0x000088, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_struct_Variable_3) == 0x0000A0, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_delegate_Variable_3) == 0x0000B0, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_PostAkEvent_ReturnValue) == 0x0000C4, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0000C8, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_int_Current_Value_4379B75345C825CF61A82D8543386D8E_Variable) == 0x0000CC, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_int_Current_Value_4379B75345C825CF61A82D8543386D8E_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_bool_Has_Been_Initialized_4379B75345C825CF61A82D8543386D8E_Variable) == 0x0000D0, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_bool_Has_Been_Initialized_4379B75345C825CF61A82D8543386D8E_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000D1, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_delegate_Variable_4) == 0x0000D8, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_int_Array_Index_Variable) == 0x0000EC, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_bool_Has_Been_Initd_Variable) == 0x0000F0, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_Type) == 0x0000F1, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_Type' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_HitContext) == 0x0000F4, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_HitContext' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_int_Loop_Counter_Variable) == 0x000124, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Add_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_Event_OldState) == 0x00012C, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_Event_NewState) == 0x00012D, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_Event_bDoCosmetics) == 0x00012E, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_SetStaticMesh_ReturnValue) == 0x00012F, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_SwitchEnum_CmpSuccess) == 0x000130, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_struct_Variable_4) == 0x000138, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000148, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_PostAkEvent_ReturnValue_1) == 0x00014C, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_GetTimelineLength_ReturnValue) == 0x000150, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000154, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_Interactable_1) == 0x0001E8, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_Interactor_1) == 0x0001F0, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x0001F8, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001F9, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_Interactable) == 0x000200, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_Interactor) == 0x000208, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000210, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_SwitchEnum_CmpSuccess_2) == 0x000211, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_MakeArray_Array_1) == 0x000218, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Array_Get_Item) == 0x000228, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Array_Length_ReturnValue) == 0x000230, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_BreakVector_X) == 0x000234, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_BreakVector_Y) == 0x000238, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_BreakVector_Z) == 0x00023C, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Less_IntInt_ReturnValue) == 0x000240, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Array_Length_ReturnValue_1) == 0x000244, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Subtract_IntInt_ReturnValue) == 0x000248, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00024C, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, Temp_bool_IsClosed_Variable) == 0x000250, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_MathExpression_ReturnValue) == 0x000254, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_MathExpression_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_MakeVector_ReturnValue) == 0x000258, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000264, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_InteractableComponent) == 0x0002F8, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, K2Node_ComponentBoundEvent_bInNewState) == 0x000300, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::K2Node_ComponentBoundEvent_bInNewState' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_GetTimelineLength_ReturnValue_1) == 0x000304, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_GetTimelineLength_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_PostAkEvent_ReturnValue_2) == 0x000308, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_PostAkEvent_ReturnValue_3) == 0x00030C, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_PostAkEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01, CallFunc_PostAkEvent_ReturnValue_4) == 0x000310, "Member 'BP_Breakable_ATM_01_C_ExecuteUbergraph_BP_Breakable_ATM_01::CallFunc_PostAkEvent_ReturnValue_4' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent_0;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent_0) == 0x000000, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent_0' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.BP_OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_Breakable_ATM_01_C_BP_OnStateChanged final
{
public:
	ESBZBreakableMachineState                     OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZBreakableMachineState                     NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_Breakable_ATM_01_C_BP_OnStateChanged");
static_assert(sizeof(BP_Breakable_ATM_01_C_BP_OnStateChanged) == 0x000003, "Wrong size on BP_Breakable_ATM_01_C_BP_OnStateChanged");
static_assert(offsetof(BP_Breakable_ATM_01_C_BP_OnStateChanged, OldState) == 0x000000, "Member 'BP_Breakable_ATM_01_C_BP_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BP_OnStateChanged, NewState) == 0x000001, "Member 'BP_Breakable_ATM_01_C_BP_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BP_OnStateChanged, bDoCosmetics) == 0x000002, "Member 'BP_Breakable_ATM_01_C_BP_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature
// 0x0034 (0x0034 - 0x0000)
struct BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature final
{
public:
	ESBZCosmeticDestructionType                   Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZCosmeticDestructionContext         HitContext;                                        // 0x0004(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature) == 0x000004, "Wrong alignment on BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature");
static_assert(sizeof(BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature) == 0x000034, "Wrong size on BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature, Type) == 0x000000, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature::Type' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature, HitContext) == 0x000004, "Member 'BP_Breakable_ATM_01_C_BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature::HitContext' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_Breakable_ATM_01_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Breakable_ATM_01_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_UserConstructionScript");
static_assert(sizeof(BP_Breakable_ATM_01_C_UserConstructionScript) == 0x000008, "Wrong size on BP_Breakable_ATM_01_C_UserConstructionScript");
static_assert(offsetof(BP_Breakable_ATM_01_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Breakable_ATM_01_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Breakable_ATM_01.BP_Breakable_ATM_01_C.setOutline
// 0x0060 (0x0060 - 0x0000)
struct BP_Breakable_ATM_01_C_SetOutline final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZBreakableMachineState                     State;                                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Breakable_ATM_01_C_SetOutline) == 0x000008, "Wrong alignment on BP_Breakable_ATM_01_C_SetOutline");
static_assert(sizeof(BP_Breakable_ATM_01_C_SetOutline) == 0x000060, "Wrong size on BP_Breakable_ATM_01_C_SetOutline");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, Enabled) == 0x000000, "Member 'BP_Breakable_ATM_01_C_SetOutline::Enabled' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, State) == 0x000001, "Member 'BP_Breakable_ATM_01_C_SetOutline::State' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_Breakable_ATM_01_C_SetOutline::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Breakable_ATM_01_C_SetOutline::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_Breakable_ATM_01_C_SetOutline::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_Breakable_ATM_01_C_SetOutline::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, Temp_int_Loop_Counter_Variable_1) == 0x000014, "Member 'BP_Breakable_ATM_01_C_SetOutline::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, K2Node_MakeArray_Array) == 0x000020, "Member 'BP_Breakable_ATM_01_C_SetOutline::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, K2Node_MakeArray_Array_1) == 0x000040, "Member 'BP_Breakable_ATM_01_C_SetOutline::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Breakable_ATM_01_C_SetOutline, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_Breakable_ATM_01_C_SetOutline::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

