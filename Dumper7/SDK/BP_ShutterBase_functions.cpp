#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ShutterBase

#include "Basic.hpp"

#include "BP_ShutterBase_classes.hpp"
#include "BP_ShutterBase_parameters.hpp"


namespace SDK
{

// Function BP_ShutterBase.BP_ShutterBase_C.ExecuteUbergraph_BP_ShutterBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ShutterBase_C::ExecuteUbergraph_BP_ShutterBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "ExecuteUbergraph_BP_ShutterBase");

	Params::BP_ShutterBase_C_ExecuteUbergraph_BP_ShutterBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShutterBase.BP_ShutterBase_C.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bStateToChangeTo                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bDoCosmetics                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ShutterBase_C::OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "OnStateChanged");

	Params::BP_ShutterBase_C_OnStateChanged Parms{};

	Parms.bStateToChangeTo = bStateToChangeTo;
	Parms.bDoCosmetics = bDoCosmetics;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShutterBase.BP_ShutterBase_C.open_timeline__UpdateFunc
// (BlueprintEvent)

void ABP_ShutterBase_C::Open_timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "open_timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShutterBase.BP_ShutterBase_C.open_timeline__FinishedFunc
// (BlueprintEvent)

void ABP_ShutterBase_C::Open_timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "open_timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShutterBase.BP_ShutterBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_ShutterBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ShutterBase.BP_ShutterBase_C.SetStateFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESBZVehicleDoorState                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AnimateOpening                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ShutterBase_C::SetStateFunction(ESBZVehicleDoorState State, bool AnimateOpening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "SetStateFunction");

	Params::BP_ShutterBase_C_SetStateFunction Parms{};

	Parms.State = State;
	Parms.AnimateOpening = AnimateOpening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ShutterBase.BP_ShutterBase_C.setShutterCollision
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ShutterBase_C::SetShutterCollision(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ShutterBase_C", "setShutterCollision");

	Params::BP_ShutterBase_C_SetShutterCollision Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}

}

