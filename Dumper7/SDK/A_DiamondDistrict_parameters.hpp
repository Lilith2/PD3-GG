#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: A_DiamondDistrict

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function A_DiamondDistrict.A_DiamondDistrict_C.ExecuteUbergraph_A_DiamondDistrict
// 0x0468 (0x0468 - 0x0000)
struct A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0028(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0050(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0068(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0078(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x0090(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x00A0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00C8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_6;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x00F0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_7;                            // 0x0108(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0118(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_8;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7;                          // 0x0140(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_9;                            // 0x0158(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_8;                          // 0x0168(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_10;                           // 0x0180(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_9;                          // 0x0190(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_11;                           // 0x01A8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_10;                         // 0x01B8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_12;                           // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_11;                         // 0x01E0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_13;                           // 0x01F8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_12;                         // 0x0208(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_14;                           // 0x0220(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_13;                         // 0x0230(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_15;                           // 0x0248(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_14;                         // 0x0258(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_16;                           // 0x0270(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_15;                         // 0x0280(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_17;                           // 0x0298(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_16;                         // 0x02A8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_18;                           // 0x02C0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_17;                         // 0x02D0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_19;                           // 0x02E8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_18;                         // 0x02F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_20;                           // 0x0310(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_19;                         // 0x0320(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_20;                         // 0x0334(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_21;                           // 0x0348(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_21;                         // 0x0358(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_22;                           // 0x0370(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0382(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_383[0x1];                                      // 0x0383(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_22;                         // 0x0384(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	EPD3HeistState                                CallFunc_HeistStateBranch_OutputPins;              // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_Event_OldHeistState;                        // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                K2Node_Event_CurrentHeistState;                    // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_23;                           // 0x03A0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BD[0x3];                                      // 0x03BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_3;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_4;                  // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_5;                  // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D2[0x2];                                      // 0x03D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_6;                  // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_7;                  // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_8;                  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_9;                  // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_10;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_11;                 // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_12;                 // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_23;                         // 0x03F8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue_13;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_14;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_15;                 // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_16;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_24;                           // 0x0420(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue_17;                 // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_18;                 // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_24;                         // 0x0438(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue_19;                 // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_20;                 // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_21;                 // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_22;                 // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_23;                 // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_24;                 // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict) == 0x000008, "Wrong alignment on A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict");
static_assert(sizeof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict) == 0x000468, "Wrong size on A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, EntryPoint) == 0x000000, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::EntryPoint' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable) == 0x000008, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_1) == 0x000018, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable) == 0x000028, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_2) == 0x000040, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_1) == 0x000050, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_3) == 0x000068, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_2) == 0x000078, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_4) == 0x000090, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_3) == 0x0000A0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_5) == 0x0000B8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_4) == 0x0000C8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_6) == 0x0000E0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_5) == 0x0000F0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_7) == 0x000108, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_6) == 0x000118, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_8) == 0x000130, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_7) == 0x000140, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_9) == 0x000158, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_8) == 0x000168, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_8' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_10) == 0x000180, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_9) == 0x000190, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_9' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_11) == 0x0001A8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_10) == 0x0001B8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_10' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_12) == 0x0001D0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_11) == 0x0001E0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_11' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_13) == 0x0001F8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_12) == 0x000208, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_12' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_14) == 0x000220, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_13) == 0x000230, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_13' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_15) == 0x000248, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_14) == 0x000258, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_14' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_16) == 0x000270, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_15) == 0x000280, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_15' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_17) == 0x000298, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_16) == 0x0002A8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_16' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_18) == 0x0002C0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_17) == 0x0002D0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_17' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_19) == 0x0002E8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_18) == 0x0002F8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_18' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_20) == 0x000310, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_19) == 0x000320, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_19' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_20) == 0x000334, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_20' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_21) == 0x000348, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_21) == 0x000358, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_21' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_22) == 0x000370, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x000380, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_bool_Has_Been_Initd_Variable) == 0x000381, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_bool_IsClosed_Variable) == 0x000382, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_22) == 0x000384, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_22' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_HeistStateBranch_OutputPins) == 0x000398, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_HeistStateBranch_OutputPins' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, K2Node_Event_OldHeistState) == 0x000399, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::K2Node_Event_OldHeistState' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, K2Node_Event_CurrentHeistState) == 0x00039A, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::K2Node_Event_CurrentHeistState' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, K2Node_SwitchEnum_CmpSuccess) == 0x00039B, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_23) == 0x0003A0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue) == 0x0003B0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_1) == 0x0003B4, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_2) == 0x0003B8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_IsValid_ReturnValue) == 0x0003BC, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_3) == 0x0003C0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_IsValid_ReturnValue_1) == 0x0003C4, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_4) == 0x0003C8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_5) == 0x0003CC, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_bool_Has_Been_Initd_Variable_1) == 0x0003D0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_IsValid_ReturnValue_2) == 0x0003D1, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_6) == 0x0003D4, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_IsValid_ReturnValue_3) == 0x0003D8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_7) == 0x0003DC, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_8) == 0x0003E0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_9) == 0x0003E4, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_10) == 0x0003E8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_11) == 0x0003EC, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_bool_IsClosed_Variable_1) == 0x0003F0, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_12) == 0x0003F4, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_23) == 0x0003F8, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_23' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_13) == 0x00040C, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_14) == 0x000410, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_15) == 0x000414, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_16) == 0x000418, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_struct_Variable_24) == 0x000420, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_17) == 0x000430, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_18) == 0x000434, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, Temp_delegate_Variable_24) == 0x000438, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::Temp_delegate_Variable_24' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_19) == 0x00044C, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_20) == 0x000450, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_21) == 0x000454, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_22) == 0x000458, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_23) == 0x00045C, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict, CallFunc_PostEvent_ReturnValue_24) == 0x000460, "Member 'A_DiamondDistrict_C_ExecuteUbergraph_A_DiamondDistrict::CallFunc_PostEvent_ReturnValue_24' has a wrong offset!");

// Function A_DiamondDistrict.A_DiamondDistrict_C.HeistStateChanged
// 0x0002 (0x0002 - 0x0000)
struct A_DiamondDistrict_C_HeistStateChanged final
{
public:
	EPD3HeistState                                OldHeistState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPD3HeistState                                CurrentHeistState;                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(A_DiamondDistrict_C_HeistStateChanged) == 0x000001, "Wrong alignment on A_DiamondDistrict_C_HeistStateChanged");
static_assert(sizeof(A_DiamondDistrict_C_HeistStateChanged) == 0x000002, "Wrong size on A_DiamondDistrict_C_HeistStateChanged");
static_assert(offsetof(A_DiamondDistrict_C_HeistStateChanged, OldHeistState) == 0x000000, "Member 'A_DiamondDistrict_C_HeistStateChanged::OldHeistState' has a wrong offset!");
static_assert(offsetof(A_DiamondDistrict_C_HeistStateChanged, CurrentHeistState) == 0x000001, "Member 'A_DiamondDistrict_C_HeistStateChanged::CurrentHeistState' has a wrong offset!");

}

