#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PD3TrafficLightBase

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function PD3TrafficLightBase.PD3TrafficLightBase_C.ExecuteUbergraph_PD3TrafficLightBase
// 0x00C0 (0x00C0 - 0x0000)
struct PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZTrafficLightStatus                        K2Node_Event_Status;                               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           K2Node_Event_Pool;                                 // 0x0008(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USBZAmbientSoundComponent*>      K2Node_Event_PedestrianSoundEmitters;              // 0x0018(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_1;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_2;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_3;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_4;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase) == 0x000008, "Wrong alignment on PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase");
static_assert(sizeof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase) == 0x0000C0, "Wrong size on PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, EntryPoint) == 0x000000, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, K2Node_Event_Status) == 0x000004, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::K2Node_Event_Status' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, K2Node_Event_Pool) == 0x000008, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::K2Node_Event_Pool' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, K2Node_Event_PedestrianSoundEmitters) == 0x000018, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::K2Node_Event_PedestrianSoundEmitters' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, Temp_int_Array_Index_Variable) == 0x000028, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Array_Get_Item) == 0x000030, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Fraction_ReturnValue) == 0x000044, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_FClamp_ReturnValue) == 0x00004C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Fraction_ReturnValue_1) == 0x000060, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000064, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_FClamp_ReturnValue_1) == 0x00006C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000070, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000074, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Fraction_ReturnValue_2) == 0x000080, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000084, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_FClamp_ReturnValue_2) == 0x000088, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00008C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000090, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000094, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Fraction_ReturnValue_3) == 0x000098, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Fraction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x00009C, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_FClamp_ReturnValue_3) == 0x0000A0, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x0000A8, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000AC, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Fraction_ReturnValue_4) == 0x0000B0, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Fraction_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x0000B4, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase, CallFunc_FClamp_ReturnValue_4) == 0x0000B8, "Member 'PD3TrafficLightBase_C_ExecuteUbergraph_PD3TrafficLightBase::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");

// Function PD3TrafficLightBase.PD3TrafficLightBase_C.UpdatePool
// 0x0028 (0x0028 - 0x0000)
struct PD3TrafficLightBase_C_UpdatePool final
{
public:
	ESBZTrafficLightStatus                        Status;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           Pool;                                              // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USBZAmbientSoundComponent*>      PedestrianSoundEmitters;                           // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PD3TrafficLightBase_C_UpdatePool) == 0x000008, "Wrong alignment on PD3TrafficLightBase_C_UpdatePool");
static_assert(sizeof(PD3TrafficLightBase_C_UpdatePool) == 0x000028, "Wrong size on PD3TrafficLightBase_C_UpdatePool");
static_assert(offsetof(PD3TrafficLightBase_C_UpdatePool, Status) == 0x000000, "Member 'PD3TrafficLightBase_C_UpdatePool::Status' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_UpdatePool, Pool) == 0x000008, "Member 'PD3TrafficLightBase_C_UpdatePool::Pool' has a wrong offset!");
static_assert(offsetof(PD3TrafficLightBase_C_UpdatePool, PedestrianSoundEmitters) == 0x000018, "Member 'PD3TrafficLightBase_C_UpdatePool::PedestrianSoundEmitters' has a wrong offset!");

}

