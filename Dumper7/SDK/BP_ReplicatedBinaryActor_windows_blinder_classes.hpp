#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedBinaryActor_windows_blinder

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReplicatedBinaryActor_windows_blinder.BP_ReplicatedBinaryActor_windows_blinder_C
// 0x0058 (0x0330 - 0x02D8)
class ABP_ReplicatedBinaryActor_windows_blinder_C : public ASBZReplicatedBinaryStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZPropDamageComponent*                SBZPropDamage;                                     // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              SBZInteractable;                                   // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Pivot;                                             // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Blinder;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavModifierComponent*                  NavModifier;                                       // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Spacing;                                           // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Amplitude;                                         // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         box_extend;                                        // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_self_breakable;                                 // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_ReplicatedBinaryActor_windows_blinder(int32 EntryPoint);
	void BndEvt__BP_ReplicatedBinaryActor_windows_blinder_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature(class UActorComponent* PoolComponent, int32 Hits, bool bDoCosmetics, const struct FSBZPropDamageContext& DamageContext);
	void BndEvt__BP_ReplicatedBinaryActor_windows_blinder_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics);
	void UserConstructionScript();
	void Hide();
	void Set_Interactable_Enable();
	void Set_Interactable_Disable();
	void Play_FX();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReplicatedBinaryActor_windows_blinder_C">();
	}
	static class ABP_ReplicatedBinaryActor_windows_blinder_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReplicatedBinaryActor_windows_blinder_C>();
	}
};
static_assert(alignof(ABP_ReplicatedBinaryActor_windows_blinder_C) == 0x000008, "Wrong alignment on ABP_ReplicatedBinaryActor_windows_blinder_C");
static_assert(sizeof(ABP_ReplicatedBinaryActor_windows_blinder_C) == 0x000330, "Wrong size on ABP_ReplicatedBinaryActor_windows_blinder_C");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, SBZPropDamage) == 0x0002E0, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::SBZPropDamage' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, SBZInteractable) == 0x0002E8, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::SBZInteractable' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Box) == 0x0002F0, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Pivot) == 0x0002F8, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Pivot' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Blinder) == 0x000300, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Blinder' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, NavModifier) == 0x000308, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::NavModifier' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, DefaultSceneRoot) == 0x000310, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Spacing) == 0x000318, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Spacing' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Amplitude) == 0x00031C, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Amplitude' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Duration) == 0x000320, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Duration' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, box_extend) == 0x000324, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::box_extend' has a wrong offset!");
static_assert(offsetof(ABP_ReplicatedBinaryActor_windows_blinder_C, Is_self_breakable) == 0x000328, "Member 'ABP_ReplicatedBinaryActor_windows_blinder_C::Is_self_breakable' has a wrong offset!");

}

