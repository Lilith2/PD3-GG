#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SentryGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SentryGun.BP_SentryGun_C
// 0x0020 (0x07A0 - 0x0780)
class ABP_SentryGun_C final : public ASBZSentryGun
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      FX_Sentry_Overheat;                                // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Interaction_Collision;                             // 0x0790(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponAttach;                                      // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void OnOverheatDamageTaken(float InHealth);
	void ExecuteUbergraph_BP_SentryGun(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SentryGun_C">();
	}
	static class ABP_SentryGun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SentryGun_C>();
	}
};
static_assert(alignof(ABP_SentryGun_C) == 0x000010, "Wrong alignment on ABP_SentryGun_C");
static_assert(sizeof(ABP_SentryGun_C) == 0x0007A0, "Wrong size on ABP_SentryGun_C");
static_assert(offsetof(ABP_SentryGun_C, UberGraphFrame) == 0x000780, "Member 'ABP_SentryGun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_C, FX_Sentry_Overheat) == 0x000788, "Member 'ABP_SentryGun_C::FX_Sentry_Overheat' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_C, Interaction_Collision) == 0x000790, "Member 'ABP_SentryGun_C::Interaction_Collision' has a wrong offset!");
static_assert(offsetof(ABP_SentryGun_C, WeaponAttach) == 0x000798, "Member 'ABP_SentryGun_C::WeaponAttach' has a wrong offset!");

}

