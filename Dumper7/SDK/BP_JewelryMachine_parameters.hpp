#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JewelryMachine

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_JewelryMachine.BP_JewelryMachine_C.ExecuteUbergraph_BP_JewelryMachine
// 0x0318 (0x0318 - 0x0000)
struct BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0020(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0048(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0070(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x0098(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_4;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_4;                          // 0x00C0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_5;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_5;                          // 0x00E8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_6;                            // 0x0100(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_6;                          // 0x0110(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_7;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_7;                          // 0x0138(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_8;                            // 0x0150(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_8;                          // 0x0160(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_9;                            // 0x0178(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_9;                          // 0x0188(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_10;                           // 0x01A0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_10;                         // 0x01B0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         K2Node_Event_NumOfBags;                            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01C8(0x0018)()
	float                                         CallFunc_BreakVector_X;                            // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimelineLength_ReturnValue;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_2;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_3;                  // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_4;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_5;                  // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_6;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_7;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_8;                  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_9;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetInitialized_ReturnValue;     // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_JewelryMachine_C*                  K2Node_DynamicCast_AsWBP_Jewelry_Machine;          // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZLootProcessorState                        K2Node_Event_NewState;                             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bIsDedicatedServer;                   // 0x0233(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0236(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0237(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetUserWidgetInitialized_ReturnValue_1;   // 0x0238(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_JewelryMachine_C*                  K2Node_DynamicCast_AsWBP_Jewelry_Machine_1;        // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZLootProcessorState                        Temp_byte_Variable;                                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B[0x1];                                      // 0x024B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x025C(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent;  // 0x02F0(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState;            // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FA[0x6];                                      // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0300(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue_10;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine) == 0x000008, "Wrong alignment on BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine");
static_assert(sizeof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine) == 0x000318, "Wrong size on BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, EntryPoint) == 0x000000, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_float_Variable) == 0x000004, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_float_Variable_1) == 0x000008, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable) == 0x000010, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable) == 0x000020, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_1) == 0x000038, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_1) == 0x000048, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_2) == 0x000060, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_2) == 0x000070, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_3) == 0x000088, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_3) == 0x000098, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_4) == 0x0000B0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_4) == 0x0000C0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_5) == 0x0000D8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_5) == 0x0000E8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_6) == 0x000100, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_6) == 0x000110, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_7) == 0x000128, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_7) == 0x000138, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_8) == 0x000150, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_8) == 0x000160, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_9) == 0x000178, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_9) == 0x000188, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_struct_Variable_10) == 0x0001A0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_delegate_Variable_10) == 0x0001B0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_delegate_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_Event_NumOfBags) == 0x0001C4, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_Event_NumOfBags' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_Conv_IntToText_ReturnValue) == 0x0001C8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_BreakVector_X) == 0x0001E0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_BreakVector_Y) == 0x0001E4, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_BreakVector_Z) == 0x0001E8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_GetTimelineLength_ReturnValue) == 0x0001EC, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_GetTimelineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue) == 0x0001F0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_1) == 0x0001F4, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_2) == 0x0001F8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_3) == 0x0001FC, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_4) == 0x000200, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_5) == 0x000204, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_6) == 0x000208, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_7) == 0x00020C, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_8) == 0x000210, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_9) == 0x000214, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_float_Variable_2) == 0x000218, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_GetUserWidgetInitialized_ReturnValue) == 0x000220, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_GetUserWidgetInitialized_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_DynamicCast_AsWBP_Jewelry_Machine) == 0x000228, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_DynamicCast_AsWBP_Jewelry_Machine' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_Event_NewState) == 0x000231, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_Event_bDoCosmetics) == 0x000232, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_Event_bIsDedicatedServer) == 0x000233, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_Event_bIsDedicatedServer' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_Not_PreBool_ReturnValue) == 0x000234, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000235, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_SwitchEnum_CmpSuccess) == 0x000236, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_SwitchEnum_CmpSuccess_1) == 0x000237, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_GetUserWidgetInitialized_ReturnValue_1) == 0x000238, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_GetUserWidgetInitialized_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_DynamicCast_AsWBP_Jewelry_Machine_1) == 0x000240, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_DynamicCast_AsWBP_Jewelry_Machine_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_DynamicCast_bSuccess_1) == 0x000248, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, Temp_byte_Variable) == 0x000249, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_SwitchEnum_CmpSuccess_2) == 0x00024A, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_Select_Default) == 0x00024C, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_MakeVector_ReturnValue) == 0x000250, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00025C, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_ComponentBoundEvent_InteractableComponent) == 0x0002F0, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_ComponentBoundEvent_InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_ComponentBoundEvent_bInNewState) == 0x0002F8, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_ComponentBoundEvent_bInNewState' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002F9, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_ComponentBoundEvent_Interactable) == 0x000300, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_ComponentBoundEvent_Interactor) == 0x000308, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000310, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine, CallFunc_PostEvent_ReturnValue_10) == 0x000314, "Member 'BP_JewelryMachine_C_ExecuteUbergraph_BP_JewelryMachine::CallFunc_PostEvent_ReturnValue_10' has a wrong offset!");

// Function BP_JewelryMachine.BP_JewelryMachine_C.BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_JewelryMachine.BP_JewelryMachine_C.BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent;                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent) == 0x000000, "Member 'BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_JewelryMachine_C_BndEvt__BP_JewelryMachine_ClaimBagInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_JewelryMachine.BP_JewelryMachine_C.BP_OnRunningStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_JewelryMachine_C_BP_OnRunningStateChanged final
{
public:
	ESBZLootProcessorState                        NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDedicatedServer;                                // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryMachine_C_BP_OnRunningStateChanged) == 0x000001, "Wrong alignment on BP_JewelryMachine_C_BP_OnRunningStateChanged");
static_assert(sizeof(BP_JewelryMachine_C_BP_OnRunningStateChanged) == 0x000003, "Wrong size on BP_JewelryMachine_C_BP_OnRunningStateChanged");
static_assert(offsetof(BP_JewelryMachine_C_BP_OnRunningStateChanged, NewState) == 0x000000, "Member 'BP_JewelryMachine_C_BP_OnRunningStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_BP_OnRunningStateChanged, bDoCosmetics) == 0x000001, "Member 'BP_JewelryMachine_C_BP_OnRunningStateChanged::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_BP_OnRunningStateChanged, bIsDedicatedServer) == 0x000002, "Member 'BP_JewelryMachine_C_BP_OnRunningStateChanged::bIsDedicatedServer' has a wrong offset!");

// Function BP_JewelryMachine.BP_JewelryMachine_C.BP_BagCountUpdated
// 0x0004 (0x0004 - 0x0000)
struct BP_JewelryMachine_C_BP_BagCountUpdated final
{
public:
	int32                                         NumOfBags;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JewelryMachine_C_BP_BagCountUpdated) == 0x000004, "Wrong alignment on BP_JewelryMachine_C_BP_BagCountUpdated");
static_assert(sizeof(BP_JewelryMachine_C_BP_BagCountUpdated) == 0x000004, "Wrong size on BP_JewelryMachine_C_BP_BagCountUpdated");
static_assert(offsetof(BP_JewelryMachine_C_BP_BagCountUpdated, NumOfBags) == 0x000000, "Member 'BP_JewelryMachine_C_BP_BagCountUpdated::NumOfBags' has a wrong offset!");

// Function BP_JewelryMachine.BP_JewelryMachine_C.SetDisplayColor
// 0x0040 (0x0040 - 0x0000)
struct BP_JewelryMachine_C_SetDisplayColor final
{
public:
	int32                                         State;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Flickering;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0xB];                                        // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_Select_Default;                             // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_JewelryMachine_C_SetDisplayColor) == 0x000010, "Wrong alignment on BP_JewelryMachine_C_SetDisplayColor");
static_assert(sizeof(BP_JewelryMachine_C_SetDisplayColor) == 0x000040, "Wrong size on BP_JewelryMachine_C_SetDisplayColor");
static_assert(offsetof(BP_JewelryMachine_C_SetDisplayColor, State) == 0x000000, "Member 'BP_JewelryMachine_C_SetDisplayColor::State' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_SetDisplayColor, Flickering) == 0x000004, "Member 'BP_JewelryMachine_C_SetDisplayColor::Flickering' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_SetDisplayColor, K2Node_MakeStruct_Vector4) == 0x000010, "Member 'BP_JewelryMachine_C_SetDisplayColor::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_SetDisplayColor, Temp_int_Variable) == 0x000020, "Member 'BP_JewelryMachine_C_SetDisplayColor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryMachine_C_SetDisplayColor, K2Node_Select_Default) == 0x000030, "Member 'BP_JewelryMachine_C_SetDisplayColor::K2Node_Select_Default' has a wrong offset!");

}

