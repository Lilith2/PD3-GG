#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CH_BaseCivilian

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CH_BaseHumanAI_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CH_BaseCivilian.CH_BaseCivilian_C
// 0x0050 (0x1C80 - 0x1C30)
class ACH_BaseCivilian_C : public ACH_BaseHumanAI_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1C30(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZAIStimuliReactionComponent*         SBZAIStimuliReaction;                              // 0x1C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZEventReactionComponent*             SBZEventReaction;                                  // 0x1C40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZShoutTargetComponent*               SBZShoutTargetComponent;                           // 0x1C48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   RedZoneColors;                                     // 0x1C50(0x0010)(Edit, BlueprintVisible)
	TArray<struct FLinearColor>                   GreenZoneColors;                                   // 0x1C60(0x0010)(Edit, BlueprintVisible)
	TArray<struct FLinearColor>                   BlueZoneColors;                                    // 0x1C70(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_CH_BaseCivilian(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CH_BaseCivilian_C">();
	}
	static class ACH_BaseCivilian_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACH_BaseCivilian_C>();
	}
};
static_assert(alignof(ACH_BaseCivilian_C) == 0x000010, "Wrong alignment on ACH_BaseCivilian_C");
static_assert(sizeof(ACH_BaseCivilian_C) == 0x001C80, "Wrong size on ACH_BaseCivilian_C");
static_assert(offsetof(ACH_BaseCivilian_C, UberGraphFrame) == 0x001C30, "Member 'ACH_BaseCivilian_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, SBZAIStimuliReaction) == 0x001C38, "Member 'ACH_BaseCivilian_C::SBZAIStimuliReaction' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, SBZEventReaction) == 0x001C40, "Member 'ACH_BaseCivilian_C::SBZEventReaction' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, SBZShoutTargetComponent) == 0x001C48, "Member 'ACH_BaseCivilian_C::SBZShoutTargetComponent' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, RedZoneColors) == 0x001C50, "Member 'ACH_BaseCivilian_C::RedZoneColors' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, GreenZoneColors) == 0x001C60, "Member 'ACH_BaseCivilian_C::GreenZoneColors' has a wrong offset!");
static_assert(offsetof(ACH_BaseCivilian_C, BlueZoneColors) == 0x001C70, "Member 'ACH_BaseCivilian_C::BlueZoneColors' has a wrong offset!");

}

