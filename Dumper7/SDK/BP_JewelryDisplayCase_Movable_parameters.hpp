#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_JewelryDisplayCase_Movable

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_JewelryDisplayCase_Movable.BP_JewelryDisplayCase_Movable_C.ExecuteUbergraph_BP_JewelryDisplayCase_Movable
// 0x02A0 (0x02A0 - 0x0000)
struct BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0040(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0068(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESBZDisplayCaseState                          K2Node_Event_OldState;                             // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDisplayCaseState                          K2Node_Event_NewState;                             // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics_1;                       // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bInEnabled;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00C8(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0158(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0208(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable) == 0x000008, "Wrong alignment on BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable");
static_assert(sizeof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable) == 0x0002A0, "Wrong size on BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, EntryPoint) == 0x000000, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_struct_Variable) == 0x000008, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_delegate_Variable) == 0x000018, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_struct_Variable_1) == 0x000030, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_delegate_Variable_1) == 0x000040, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_struct_Variable_2) == 0x000058, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_delegate_Variable_2) == 0x000068, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, Temp_bool_Variable) == 0x00007C, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_Event_OldState) == 0x00007D, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_Event_NewState) == 0x00007E, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_Event_bDoCosmetics_1) == 0x00007F, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_Event_bDoCosmetics_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000081, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_Event_bDoCosmetics) == 0x000082, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000084, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_PostEventAtLocation_ReturnValue) == 0x000090, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_CustomEvent_bInEnabled) == 0x000094, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_CustomEvent_bInEnabled' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_Not_PreBool_ReturnValue) == 0x000095, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_X) == 0x000098, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_Y) == 0x00009C, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_Z) == 0x0000A0, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_X_1) == 0x0000A4, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_BreakVector_Z_1) == 0x0000AC, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_MakeVector_ReturnValue) == 0x0000B0, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_MakeVector_ReturnValue_1) == 0x0000BC, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000C8, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000158, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_PostAkEvent_ReturnValue) == 0x0001E8, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_PostAkEvent_ReturnValue_1) == 0x0001EC, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_PostAkEvent_ReturnValue_2) == 0x0001F0, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001F4, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, K2Node_Select_Default) == 0x0001F8, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_MakeVector_ReturnValue_2) == 0x0001FC, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000208, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000298, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000299, "Member 'BP_JewelryDisplayCase_Movable_C_ExecuteUbergraph_BP_JewelryDisplayCase_Movable::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");

// Function BP_JewelryDisplayCase_Movable.BP_JewelryDisplayCase_Movable_C.EnableLockdown
// 0x0001 (0x0001 - 0x0000)
struct BP_JewelryDisplayCase_Movable_C_EnableLockdown final
{
public:
	bool                                          bInEnabled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryDisplayCase_Movable_C_EnableLockdown) == 0x000001, "Wrong alignment on BP_JewelryDisplayCase_Movable_C_EnableLockdown");
static_assert(sizeof(BP_JewelryDisplayCase_Movable_C_EnableLockdown) == 0x000001, "Wrong size on BP_JewelryDisplayCase_Movable_C_EnableLockdown");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_EnableLockdown, bInEnabled) == 0x000000, "Member 'BP_JewelryDisplayCase_Movable_C_EnableLockdown::bInEnabled' has a wrong offset!");

// Function BP_JewelryDisplayCase_Movable.BP_JewelryDisplayCase_Movable_C.BP_OnGlassBroken
// 0x0001 (0x0001 - 0x0000)
struct BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken final
{
public:
	bool                                          bDoCosmetics;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken) == 0x000001, "Wrong alignment on BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken");
static_assert(sizeof(BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken) == 0x000001, "Wrong size on BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken, bDoCosmetics) == 0x000000, "Member 'BP_JewelryDisplayCase_Movable_C_BP_OnGlassBroken::bDoCosmetics' has a wrong offset!");

// Function BP_JewelryDisplayCase_Movable.BP_JewelryDisplayCase_Movable_C.BP_OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged final
{
public:
	ESBZDisplayCaseState                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDisplayCaseState                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged");
static_assert(sizeof(BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged) == 0x000003, "Wrong size on BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged, OldState) == 0x000000, "Member 'BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged, NewState) == 0x000001, "Member 'BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged, bDoCosmetics) == 0x000002, "Member 'BP_JewelryDisplayCase_Movable_C_BP_OnStateChanged::bDoCosmetics' has a wrong offset!");

}

