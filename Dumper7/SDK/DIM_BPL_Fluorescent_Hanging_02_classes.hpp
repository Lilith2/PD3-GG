#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DIM_BPL_Fluorescent_Hanging_02

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DIM_BPL_Fluorescent_Hanging_02.DIM_BPL_Fluorescent_Hanging_02_C
// 0x0028 (0x02D0 - 0x02A8)
class ADIM_BPL_Fluorescent_Hanging_02_C final : public AActor
{
public:
	class UPointLightComponent*                   PointLight;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_Fluorescent_02_Cable;                          // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LGT_Fluorescent_02;                                // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DIM_BPL_Fluorescent_Hanging_02_C">();
	}
	static class ADIM_BPL_Fluorescent_Hanging_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADIM_BPL_Fluorescent_Hanging_02_C>();
	}
};
static_assert(alignof(ADIM_BPL_Fluorescent_Hanging_02_C) == 0x000008, "Wrong alignment on ADIM_BPL_Fluorescent_Hanging_02_C");
static_assert(sizeof(ADIM_BPL_Fluorescent_Hanging_02_C) == 0x0002D0, "Wrong size on ADIM_BPL_Fluorescent_Hanging_02_C");
static_assert(offsetof(ADIM_BPL_Fluorescent_Hanging_02_C, PointLight) == 0x0002A8, "Member 'ADIM_BPL_Fluorescent_Hanging_02_C::PointLight' has a wrong offset!");
static_assert(offsetof(ADIM_BPL_Fluorescent_Hanging_02_C, LGT_Fluorescent_02_Cable) == 0x0002B0, "Member 'ADIM_BPL_Fluorescent_Hanging_02_C::LGT_Fluorescent_02_Cable' has a wrong offset!");
static_assert(offsetof(ADIM_BPL_Fluorescent_Hanging_02_C, SpotLight) == 0x0002B8, "Member 'ADIM_BPL_Fluorescent_Hanging_02_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ADIM_BPL_Fluorescent_Hanging_02_C, LGT_Fluorescent_02) == 0x0002C0, "Member 'ADIM_BPL_Fluorescent_Hanging_02_C::LGT_Fluorescent_02' has a wrong offset!");
static_assert(offsetof(ADIM_BPL_Fluorescent_Hanging_02_C, DefaultSceneRoot) == 0x0002C8, "Member 'ADIM_BPL_Fluorescent_Hanging_02_C::DefaultSceneRoot' has a wrong offset!");

}

