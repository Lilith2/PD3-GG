#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DisplayWallCabinet_01_Glass_03

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_DisplayWallCabinet_01_Glass_03.BP_DisplayWallCabinet_01_Glass_03_C.ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03
// 0x0120 (0x0120 - 0x0000)
struct BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0030(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0058(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	ESBZDisplayCaseState                          K2Node_Event_OldState;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDisplayCaseState                          K2Node_Event_NewState;                             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0070(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bCuttingEnabled;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEventAtLocation_ReturnValue;          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03) == 0x000008, "Wrong alignment on BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03");
static_assert(sizeof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03) == 0x000120, "Wrong size on BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, EntryPoint) == 0x000000, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_ComponentBoundEvent_Interactable) == 0x000008, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_ComponentBoundEvent_Interactor) == 0x000010, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000018, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, Temp_struct_Variable) == 0x000020, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, Temp_delegate_Variable) == 0x000030, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, Temp_struct_Variable_1) == 0x000048, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, Temp_delegate_Variable_1) == 0x000058, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_Event_OldState) == 0x00006C, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_Event_OldState' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_Event_NewState) == 0x00006D, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_Event_bDoCosmetics) == 0x00006E, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000070, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_SwitchEnum_CmpSuccess) == 0x000100, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, K2Node_Event_bCuttingEnabled) == 0x000101, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::K2Node_Event_bCuttingEnabled' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000104, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, CallFunc_PostEventAtLocation_ReturnValue) == 0x000110, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::CallFunc_PostEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, CallFunc_PostEvent_ReturnValue) == 0x000114, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03, CallFunc_PostEvent_ReturnValue_1) == 0x000118, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_ExecuteUbergraph_BP_DisplayWallCabinet_01_Glass_03::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");

// Function BP_DisplayWallCabinet_01_Glass_03.BP_DisplayWallCabinet_01_Glass_03_C.BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BndEvt__BP_DisplayWallCabinet_01_Glass_03_InteractableComponent_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_DisplayWallCabinet_01_Glass_03.BP_DisplayWallCabinet_01_Glass_03_C.BP_OnCuttingEnabledChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged final
{
public:
	bool                                          bCuttingEnabled;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged) == 0x000001, "Wrong alignment on BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged");
static_assert(sizeof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged) == 0x000001, "Wrong size on BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged, bCuttingEnabled) == 0x000000, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BP_OnCuttingEnabledChanged::bCuttingEnabled' has a wrong offset!");

// Function BP_DisplayWallCabinet_01_Glass_03.BP_DisplayWallCabinet_01_Glass_03_C.BP_OnStateChanged
// 0x0003 (0x0003 - 0x0000)
struct BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged final
{
public:
	ESBZDisplayCaseState                          OldState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZDisplayCaseState                          NewState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged");
static_assert(sizeof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged) == 0x000003, "Wrong size on BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged, OldState) == 0x000000, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged, NewState) == 0x000001, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged, bDoCosmetics) == 0x000002, "Member 'BP_DisplayWallCabinet_01_Glass_03_C_BP_OnStateChanged::bDoCosmetics' has a wrong offset!");

}

