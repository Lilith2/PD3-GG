#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VaultDoor_Small

#include "Basic.hpp"

#include "BP_VaultDoor_Small_classes.hpp"
#include "BP_VaultDoor_Small_parameters.hpp"


namespace SDK
{

// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.ExecuteUbergraph_BP_VaultDoor_Small
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_VaultDoor_Small_C::ExecuteUbergraph_BP_VaultDoor_Small(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "ExecuteUbergraph_BP_VaultDoor_Small");

	Params::BP_VaultDoor_Small_C_ExecuteUbergraph_BP_VaultDoor_Small Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.OnStateChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// ESBZGateState                           OldState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ESBZGateState                           NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsInitialStateChange                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VaultDoor_Small_C::OnStateChanged(ESBZGateState OldState, ESBZGateState NewState, bool bIsInitialStateChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "OnStateChanged");

	Params::BP_VaultDoor_Small_C_OnStateChanged Parms{};

	Parms.OldState = OldState;
	Parms.NewState = NewState;
	Parms.bIsInitialStateChange = bIsInitialStateChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class USBZBaseInteractableComponent*    Interactable_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USBZInteractorComponent*          Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLocallyControlledInteractor                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VaultDoor_Small_C::BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");

	Params::BP_VaultDoor_Small_C_BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature Parms{};

	Parms.Interactable_0 = Interactable_0;
	Parms.Interactor = Interactor;
	Parms.bIsLocallyControlledInteractor = bIsLocallyControlledInteractor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class USBZBaseInteractableComponent*    Interactable_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USBZInteractorComponent*          Interactor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsLocallyControlledInteractor                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_VaultDoor_Small_C::BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");

	Params::BP_VaultDoor_Small_C_BndEvt__BP_VaultDoor_Small_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature Parms{};

	Parms.Interactable_0 = Interactable_0;
	Parms.Interactor = Interactor;
	Parms.bIsLocallyControlledInteractor = bIsLocallyControlledInteractor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.Unlock__UpdateFunc
// (BlueprintEvent)

void ABP_VaultDoor_Small_C::Unlock__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "Unlock__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_VaultDoor_Small.BP_VaultDoor_Small_C.Unlock__FinishedFunc
// (BlueprintEvent)

void ABP_VaultDoor_Small_C::Unlock__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_VaultDoor_Small_C", "Unlock__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}

}

