#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_WixiaComputer

#include "Basic.hpp"

#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.ExecuteUbergraph_WBP_WixiaComputer
// 0x01B8 (0x01B8 - 0x0000)
struct WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZHackableDisplayText                K2Node_Event_DisplayText;                          // 0x0008(0x0060)()
	class FText                                   K2Node_Event_InText_1;                             // 0x0068(0x0018)()
	struct FSBZHackableDisplayText                K2Node_Event_NewDisplayText;                       // 0x0080(0x0060)()
	class FText                                   K2Node_Event_InText;                               // 0x00E0(0x0018)()
	int32                                         K2Node_Event_progress;                             // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0100(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Event_codes;                                // 0x0120(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_KeypadUVLightPossibleCode_C*> K2Node_MakeArray_Array;                            // 0x0140(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_main;                                 // 0x0158(0x0018)()
	class FText                                   K2Node_Event_secondary;                            // 0x0170(0x0018)(ConstParm)
	class FText                                   K2Node_Event_additional;                           // 0x0188(0x0018)()
	int32                                         CallFunc_Array_Get_Item;                           // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_KeypadUVLightPossibleCode_C*       CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer");
static_assert(sizeof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer) == 0x0001B8, "Wrong size on WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, EntryPoint) == 0x000000, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_DisplayText) == 0x000008, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_DisplayText' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_InText_1) == 0x000068, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_InText_1' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_NewDisplayText) == 0x000080, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_NewDisplayText' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_InText) == 0x0000E0, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_InText' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_progress) == 0x0000F8, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_progress' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Conv_IntToText_ReturnValue) == 0x000100, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000118, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00011C, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_codes) == 0x000120, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_codes' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Less_IntInt_ReturnValue) == 0x000138, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_MakeArray_Array) == 0x000140, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, Temp_int_Array_Index_Variable) == 0x000150, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_main) == 0x000158, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_main' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_secondary) == 0x000170, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_secondary' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, K2Node_Event_additional) == 0x000188, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::K2Node_Event_additional' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'WBP_WixiaComputer_C_ExecuteUbergraph_WBP_WixiaComputer::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.updateInformation
// 0x0048 (0x0048 - 0x0000)
struct WBP_WixiaComputer_C_UpdateInformation final
{
public:
	class FText                                   Main;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Secondary;                                         // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Additional;                                        // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateInformation) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateInformation");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateInformation) == 0x000048, "Wrong size on WBP_WixiaComputer_C_UpdateInformation");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateInformation, Main) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateInformation::Main' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateInformation, Secondary) == 0x000018, "Member 'WBP_WixiaComputer_C_UpdateInformation::Secondary' has a wrong offset!");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateInformation, Additional) == 0x000030, "Member 'WBP_WixiaComputer_C_UpdateInformation::Additional' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.updateKeypadPossibleCodes
// 0x0010 (0x0010 - 0x0000)
struct WBP_WixiaComputer_C_UpdateKeypadPossibleCodes final
{
public:
	TArray<int32>                                 Codes;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateKeypadPossibleCodes) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateKeypadPossibleCodes");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateKeypadPossibleCodes) == 0x000010, "Wrong size on WBP_WixiaComputer_C_UpdateKeypadPossibleCodes");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateKeypadPossibleCodes, Codes) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateKeypadPossibleCodes::Codes' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.updateHackingProgress
// 0x0004 (0x0004 - 0x0000)
struct WBP_WixiaComputer_C_UpdateHackingProgress final
{
public:
	int32                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateHackingProgress) == 0x000004, "Wrong alignment on WBP_WixiaComputer_C_UpdateHackingProgress");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateHackingProgress) == 0x000004, "Wrong size on WBP_WixiaComputer_C_UpdateHackingProgress");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateHackingProgress, Progress) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateHackingProgress::Progress' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.updateHackingTimerProcessName
// 0x0018 (0x0018 - 0x0000)
struct WBP_WixiaComputer_C_UpdateHackingTimerProcessName final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateHackingTimerProcessName) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateHackingTimerProcessName");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateHackingTimerProcessName) == 0x000018, "Wrong size on WBP_WixiaComputer_C_UpdateHackingTimerProcessName");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateHackingTimerProcessName, InText) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateHackingTimerProcessName::InText' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.UpdateUnlockDisplayText
// 0x0060 (0x0060 - 0x0000)
struct WBP_WixiaComputer_C_UpdateUnlockDisplayText final
{
public:
	struct FSBZHackableDisplayText                NewDisplayText;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateUnlockDisplayText) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateUnlockDisplayText");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateUnlockDisplayText) == 0x000060, "Wrong size on WBP_WixiaComputer_C_UpdateUnlockDisplayText");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateUnlockDisplayText, NewDisplayText) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateUnlockDisplayText::NewDisplayText' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.UpdateSuccessText
// 0x0018 (0x0018 - 0x0000)
struct WBP_WixiaComputer_C_UpdateSuccessText final
{
public:
	class FText                                   InText;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateSuccessText) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateSuccessText");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateSuccessText) == 0x000018, "Wrong size on WBP_WixiaComputer_C_UpdateSuccessText");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateSuccessText, InText) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateSuccessText::InText' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.UpdateEmailDisplayText
// 0x0060 (0x0060 - 0x0000)
struct WBP_WixiaComputer_C_UpdateEmailDisplayText final
{
public:
	struct FSBZHackableDisplayText                DisplayText;                                       // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_WixiaComputer_C_UpdateEmailDisplayText) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_UpdateEmailDisplayText");
static_assert(sizeof(WBP_WixiaComputer_C_UpdateEmailDisplayText) == 0x000060, "Wrong size on WBP_WixiaComputer_C_UpdateEmailDisplayText");
static_assert(offsetof(WBP_WixiaComputer_C_UpdateEmailDisplayText, DisplayText) == 0x000000, "Member 'WBP_WixiaComputer_C_UpdateEmailDisplayText::DisplayText' has a wrong offset!");

// Function WBP_WixiaComputer.WBP_WixiaComputer_C.HideAllWidgetsButOne
// 0x0008 (0x0008 - 0x0000)
struct WBP_WixiaComputer_C_HideAllWidgetsButOne final
{
public:
	class UWidget*                                WidgetToShow;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_WixiaComputer_C_HideAllWidgetsButOne) == 0x000008, "Wrong alignment on WBP_WixiaComputer_C_HideAllWidgetsButOne");
static_assert(sizeof(WBP_WixiaComputer_C_HideAllWidgetsButOne) == 0x000008, "Wrong size on WBP_WixiaComputer_C_HideAllWidgetsButOne");
static_assert(offsetof(WBP_WixiaComputer_C_HideAllWidgetsButOne, WidgetToShow) == 0x000000, "Member 'WBP_WixiaComputer_C_HideAllWidgetsButOne::WidgetToShow' has a wrong offset!");

}

