#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Traffic_light_switcher

#include "Basic.hpp"

#include "Traffic_light_status_structs.hpp"
#include "Pool_structure_structs.hpp"


namespace SDK::Params
{

// Function Traffic_light_switcher.Traffic_light_switcher_C.ExecuteUbergraph_Traffic_light_switcher
// 0x0038 (0x0038 - 0x0000)
struct Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPool_structure                        CallFunc_Array_Get_Item;                           // 0x0018(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher) == 0x000008, "Wrong alignment on Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher");
static_assert(sizeof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher) == 0x000038, "Wrong size on Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, EntryPoint) == 0x000000, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::EntryPoint' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, Temp_int_Array_Index_Variable) == 0x000004, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, CallFunc_Array_Get_Item) == 0x000018, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'Traffic_light_switcher_C_ExecuteUbergraph_Traffic_light_switcher::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Traffic_light_switcher.Traffic_light_switcher_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Traffic_light_switcher_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Traffic_light_switcher_C_ReceiveTick) == 0x000004, "Wrong alignment on Traffic_light_switcher_C_ReceiveTick");
static_assert(sizeof(Traffic_light_switcher_C_ReceiveTick) == 0x000004, "Wrong size on Traffic_light_switcher_C_ReceiveTick");
static_assert(offsetof(Traffic_light_switcher_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Traffic_light_switcher_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Traffic_light_switcher.Traffic_light_switcher_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct Traffic_light_switcher_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPool_structure                        CallFunc_Array_Get_Item;                           // 0x0010(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Traffic_light_switcher_C_UserConstructionScript) == 0x000008, "Wrong alignment on Traffic_light_switcher_C_UserConstructionScript");
static_assert(sizeof(Traffic_light_switcher_C_UserConstructionScript) == 0x000030, "Wrong size on Traffic_light_switcher_C_UserConstructionScript");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Traffic_light_switcher_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Traffic_light_switcher_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Traffic_light_switcher_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Traffic_light_switcher_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000010, "Member 'Traffic_light_switcher_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Traffic_light_switcher_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Traffic_light_switcher.Traffic_light_switcher_C.update_pool
// 0x00B0 (0x00B0 - 0x0000)
struct Traffic_light_switcher_C_Update_pool final
{
public:
	TArray<class AActor*>                         Pool;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETraffic_light_status                         Status;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         binfloat;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_2;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_3;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_7;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Fraction_ReturnValue_4;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_8;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Traffic_light_switcher_C_Update_pool) == 0x000008, "Wrong alignment on Traffic_light_switcher_C_Update_pool");
static_assert(sizeof(Traffic_light_switcher_C_Update_pool) == 0x0000B0, "Wrong size on Traffic_light_switcher_C_Update_pool");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, Pool) == 0x000000, "Member 'Traffic_light_switcher_C_Update_pool::Pool' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, Status) == 0x000010, "Member 'Traffic_light_switcher_C_Update_pool::Status' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, binfloat) == 0x000014, "Member 'Traffic_light_switcher_C_Update_pool::binfloat' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Traffic_light_switcher_C_Update_pool::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, Temp_int_Array_Index_Variable) == 0x000020, "Member 'Traffic_light_switcher_C_Update_pool::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'Traffic_light_switcher_C_Update_pool::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Array_Get_Item) == 0x000028, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Fraction_ReturnValue) == 0x000044, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_FClamp_ReturnValue) == 0x00004C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000058, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Fraction_ReturnValue_1) == 0x00005C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000060, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_FClamp_ReturnValue_1) == 0x000064, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00006C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000070, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Fraction_ReturnValue_2) == 0x000074, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000078, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_FClamp_ReturnValue_2) == 0x00007C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000080, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000084, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000088, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Fraction_ReturnValue_3) == 0x00008C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Fraction_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x000090, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_FClamp_ReturnValue_3) == 0x000094, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000098, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_7) == 0x00009C, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x0000A0, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Fraction_ReturnValue_4) == 0x0000A4, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Fraction_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_Subtract_FloatFloat_ReturnValue_8) == 0x0000A8, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_Subtract_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Traffic_light_switcher_C_Update_pool, CallFunc_FClamp_ReturnValue_4) == 0x0000AC, "Member 'Traffic_light_switcher_C_Update_pool::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");

}

