#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Smoke_machine

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Smoke_machine.BP_Smoke_machine_C.ExecuteUbergraph_BP_Smoke_machine
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0014)(ZeroConstructor, NoDestructor)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x002C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0058(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x007C(0x0014)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Smoke_Screen_C*                     CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Smoke_Screen_C*                     CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Smoke_Screen_C*                     CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine) == 0x000008, "Wrong alignment on BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine");
static_assert(sizeof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine) == 0x0000F8, "Wrong size on BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, EntryPoint) == 0x000000, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_struct_Variable) == 0x000008, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_delegate_Variable) == 0x00002C, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_struct_Variable_1) == 0x000048, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_delegate_Variable_1) == 0x000058, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_PostAkEvent_ReturnValue) == 0x000070, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Array_Index_Variable) == 0x000078, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, K2Node_CreateDelegate_OutputDelegate_1) == 0x00007C, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Array_Index_Variable_1) == 0x000090, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000A8, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, Temp_int_Loop_Counter_Variable_2) == 0x0000B4, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000DC, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, K2Node_ComponentBoundEvent_Interactable) == 0x0000E0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, K2Node_ComponentBoundEvent_Interactor) == 0x0000E8, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x0000F0, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine, CallFunc_PostAkEvent_ReturnValue_1) == 0x0000F4, "Member 'BP_Smoke_machine_C_ExecuteUbergraph_BP_Smoke_machine::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_Smoke_machine.BP_Smoke_machine_C.BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable_0;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactable_0) == 0x000000, "Member 'BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactable_0' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_Smoke_machine_C_BndEvt__BP_Smoke_machine_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

}

