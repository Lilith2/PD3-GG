#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Keypad

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_Keypad.BP_Keypad_C.ExecuteUbergraph_BP_Keypad
// 0x0450 (0x0450 - 0x0000)
struct BP_Keypad_C_ExecuteUbergraph_BP_Keypad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZModuleActorState                          Temp_byte_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZModuleActorState                          Temp_byte_Variable_1;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZModuleActorState                          Temp_byte_Variable_2;                              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_13;                           // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_14;                           // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_15;                           // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_16;                           // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_17;                           // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_KeyIndexPressed;                      // 0x0158(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_Event_PlayerAttachedActors_1;               // 0x0160(0x0010)(ConstParm, ReferenceParm)
	class USkeletalMeshComponent*                 K2Node_Event_PlayerMesh;                           // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_SocketToAttach;                       // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0xC];                                      // 0x0184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_Event_SpawnTransform;                       // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_Event_PlayerAttachedActors;                 // 0x01C0(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_FilterArray_FilteredArray;                // 0x01D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_UVLightPlayer_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_FilterArray_FilteredArray_1;              // 0x01F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable_18;                           // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_19;                           // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_GuessedCodeText;                      // 0x0230(0x0018)(ConstParm)
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESBZModuleActorState                          K2Node_Event_NewState;                             // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_252[0x6];                                      // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_KeypadInteraction_C*               K2Node_DynamicCast_AsWBP_Keypad_Interaction;       // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x0264(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetUserWidgetObject_ReturnValue_1;        // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_KeypadInteraction_C*               K2Node_DynamicCast_AsWBP_Keypad_Interaction_1;     // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_ReturnValue;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Event_GeneratedCode;                        // 0x02B0(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_4;                         // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_5;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_6;                         // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_KeyIndex;                             // 0x031C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInNewState;                          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_328[0x8];                                      // 0x0328(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_20;                           // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_21;                           // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_22;                           // 0x0360(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_23;                           // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloatDelegateTimer*               CallFunc_CreateCurveFloatDelegateTimer_ReturnValue; // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloatDelegateTimer*               Temp_object_Variable;                              // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCurveFloatDelegateTimer*         K2Node_CustomEvent_CurveFloatTimer;                // 0x03E0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveElapsedTime;               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveTimeSinceLast;             // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveValue;                     // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveTime;                      // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCurveFloatDelegateTimer* CurveFloatTimer, float CurveElapsedTime, float CurveTimeSinceLast, float CurveValue, float CurveTime)> K2Node_CreateDelegate_OutputDelegate;              // 0x03F8(0x0014)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UCurveFloatDelegateTimer*         K2Node_CustomEvent_CurveFloatTimer_1;              // 0x0410(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveElapsedTime_1;             // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveTimeSinceLast_1;           // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveValue_1;                   // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CurveTime_1;                    // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0429(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42A[0x2];                                      // 0x042A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCurveFloatDelegateTimer* CurveFloatTimer, float CurveElapsedTime, float CurveTimeSinceLast, float CurveValue, float CurveTime)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x042C(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad) == 0x000010, "Wrong alignment on BP_Keypad_C_ExecuteUbergraph_BP_Keypad");
static_assert(sizeof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad) == 0x000450, "Wrong size on BP_Keypad_C_ExecuteUbergraph_BP_Keypad");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, EntryPoint) == 0x000000, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable) == 0x000004, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_1) == 0x000014, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_2) == 0x000024, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_3) == 0x000034, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_4) == 0x000044, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_byte_Variable) == 0x000054, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_5) == 0x000058, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_6) == 0x000068, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_7) == 0x000078, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_8) == 0x000088, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_9) == 0x000098, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_10) == 0x0000A8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_byte_Variable_1) == 0x0000B8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable) == 0x0000BC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_1) == 0x0000C0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_2) == 0x0000C4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_3) == 0x0000C8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_4) == 0x0000CC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_5) == 0x0000D0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_byte_Variable_2) == 0x0000D4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_11) == 0x0000D8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_12) == 0x0000E8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_13) == 0x0000F8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_14) == 0x000108, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_15) == 0x000118, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_16) == 0x000128, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_17) == 0x000138, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Select_Default) == 0x000148, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_KeyIndexPressed) == 0x000158, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_KeyIndexPressed' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00015C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_PlayerAttachedActors_1) == 0x000160, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_PlayerAttachedActors_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_PlayerMesh) == 0x000170, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_PlayerMesh' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_SocketToAttach) == 0x000178, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_SocketToAttach' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_SpawnTransform) == 0x000190, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_PlayerAttachedActors) == 0x0001C0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_PlayerAttachedActors' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001D0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_FilterArray_FilteredArray) == 0x0001D8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_FilterArray_FilteredArray' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001F0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_FilterArray_FilteredArray_1) == 0x0001F8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_FilterArray_FilteredArray_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Length_ReturnValue_1) == 0x000208, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00020C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_18) == 0x000210, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_19) == 0x000220, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_GuessedCodeText) == 0x000230, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_GuessedCodeText' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_GetUserWidgetObject_ReturnValue) == 0x000248, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_GetUserWidgetObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_NewState) == 0x000250, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_bDoCosmetics) == 0x000251, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_DynamicCast_AsWBP_Keypad_Interaction) == 0x000258, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_DynamicCast_AsWBP_Keypad_Interaction' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Select_Default_1) == 0x000264, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Select_Default_2) == 0x000274, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000278, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_GetUserWidgetObject_ReturnValue_1) == 0x000280, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_GetUserWidgetObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_DynamicCast_AsWBP_Keypad_Interaction_1) == 0x000288, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_DynamicCast_AsWBP_Keypad_Interaction_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_GetRenderTarget_ReturnValue) == 0x000298, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_GetRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_int_Array_Index_Variable) == 0x0002A0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_GeneratedCode) == 0x0002B0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_GeneratedCode' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_1) == 0x0002C0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_2) == 0x0002C4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0002C8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0002CC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Length_ReturnValue_2) == 0x0002D0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Length_ReturnValue_3) == 0x0002D4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002D8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Less_IntInt_ReturnValue) == 0x0002DC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_3) == 0x0002E0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0002E4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002E8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_MakeStruct_Vector4) == 0x0002F0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_4) == 0x000300, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000304, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000308, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_5) == 0x00030C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000310, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000314, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Array_Get_Item_6) == 0x000318, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_KeyIndex) == 0x00031C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_KeyIndex' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Event_bInNewState) == 0x000320, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Event_bInNewState' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x000324, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_MakeStruct_Vector4_1) == 0x000330, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_20) == 0x000340, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_21) == 0x000350, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_22) == 0x000360, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_struct_Variable_23) == 0x000370, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_int_Variable) == 0x000380, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000384, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_Select_Default_3) == 0x000388, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_CreateCurveFloatDelegateTimer_ReturnValue) == 0x000398, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_CreateCurveFloatDelegateTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_BreakColor_R) == 0x0003A0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_BreakColor_G) == 0x0003A4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_BreakColor_B) == 0x0003A8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_BreakColor_A) == 0x0003AC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_IsValid_ReturnValue) == 0x0003B0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_object_Variable) == 0x0003B8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_6) == 0x0003C0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_7) == 0x0003C4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_8) == 0x0003C8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_float_Variable_9) == 0x0003CC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, Temp_int_Loop_Counter_Variable) == 0x0003D0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003D4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_Add_IntInt_ReturnValue) == 0x0003D8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveFloatTimer) == 0x0003E0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveFloatTimer' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveElapsedTime) == 0x0003E8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveTimeSinceLast) == 0x0003EC, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveTimeSinceLast' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveValue) == 0x0003F0, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveTime) == 0x0003F4, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveTime' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CreateDelegate_OutputDelegate) == 0x0003F8, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveFloatTimer_1) == 0x000410, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveFloatTimer_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveElapsedTime_1) == 0x000418, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveTimeSinceLast_1) == 0x00041C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveTimeSinceLast_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveValue_1) == 0x000420, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CustomEvent_CurveTime_1) == 0x000424, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CustomEvent_CurveTime_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_IsDedicatedServer_ReturnValue) == 0x000428, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000429, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, K2Node_CreateDelegate_OutputDelegate_1) == 0x00042C, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_ExecuteUbergraph_BP_Keypad, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000440, "Member 'BP_Keypad_C_ExecuteUbergraph_BP_Keypad::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_OnKeypadFocusChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_Keypad_C_BP_OnKeypadFocusChanged final
{
public:
	int32                                         KeyIndex;                                          // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Keypad_C_BP_OnKeypadFocusChanged) == 0x000004, "Wrong alignment on BP_Keypad_C_BP_OnKeypadFocusChanged");
static_assert(sizeof(BP_Keypad_C_BP_OnKeypadFocusChanged) == 0x000008, "Wrong size on BP_Keypad_C_BP_OnKeypadFocusChanged");
static_assert(offsetof(BP_Keypad_C_BP_OnKeypadFocusChanged, KeyIndex) == 0x000000, "Member 'BP_Keypad_C_BP_OnKeypadFocusChanged::KeyIndex' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_BP_OnKeypadFocusChanged, bInNewState) == 0x000004, "Member 'BP_Keypad_C_BP_OnKeypadFocusChanged::bInNewState' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_UpdateHighlights
// 0x0010 (0x0010 - 0x0000)
struct BP_Keypad_C_BP_UpdateHighlights final
{
public:
	TArray<int32>                                 GeneratedCode;                                     // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Keypad_C_BP_UpdateHighlights) == 0x000008, "Wrong alignment on BP_Keypad_C_BP_UpdateHighlights");
static_assert(sizeof(BP_Keypad_C_BP_UpdateHighlights) == 0x000010, "Wrong size on BP_Keypad_C_BP_UpdateHighlights");
static_assert(offsetof(BP_Keypad_C_BP_UpdateHighlights, GeneratedCode) == 0x000000, "Member 'BP_Keypad_C_BP_UpdateHighlights::GeneratedCode' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_OnStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_Keypad_C_BP_OnStateChanged final
{
public:
	ESBZModuleActorState                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Keypad_C_BP_OnStateChanged) == 0x000001, "Wrong alignment on BP_Keypad_C_BP_OnStateChanged");
static_assert(sizeof(BP_Keypad_C_BP_OnStateChanged) == 0x000002, "Wrong size on BP_Keypad_C_BP_OnStateChanged");
static_assert(offsetof(BP_Keypad_C_BP_OnStateChanged, NewState) == 0x000000, "Member 'BP_Keypad_C_BP_OnStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_BP_OnStateChanged, bDoCosmetics) == 0x000001, "Member 'BP_Keypad_C_BP_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_OnGuessedCodeChanged
// 0x0018 (0x0018 - 0x0000)
struct BP_Keypad_C_BP_OnGuessedCodeChanged final
{
public:
	class FText                                   GuessedCodeText;                                   // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Keypad_C_BP_OnGuessedCodeChanged) == 0x000008, "Wrong alignment on BP_Keypad_C_BP_OnGuessedCodeChanged");
static_assert(sizeof(BP_Keypad_C_BP_OnGuessedCodeChanged) == 0x000018, "Wrong size on BP_Keypad_C_BP_OnGuessedCodeChanged");
static_assert(offsetof(BP_Keypad_C_BP_OnGuessedCodeChanged, GuessedCodeText) == 0x000000, "Member 'BP_Keypad_C_BP_OnGuessedCodeChanged::GuessedCodeText' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_HandleLanternOverlapEnd
// 0x0010 (0x0010 - 0x0000)
struct BP_Keypad_C_BP_HandleLanternOverlapEnd final
{
public:
	TArray<class AActor*>                         PlayerAttachedActors;                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Keypad_C_BP_HandleLanternOverlapEnd) == 0x000008, "Wrong alignment on BP_Keypad_C_BP_HandleLanternOverlapEnd");
static_assert(sizeof(BP_Keypad_C_BP_HandleLanternOverlapEnd) == 0x000010, "Wrong size on BP_Keypad_C_BP_HandleLanternOverlapEnd");
static_assert(offsetof(BP_Keypad_C_BP_HandleLanternOverlapEnd, PlayerAttachedActors) == 0x000000, "Member 'BP_Keypad_C_BP_HandleLanternOverlapEnd::PlayerAttachedActors' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_HandleLanternOverlapBegin
// 0x0060 (0x0060 - 0x0000)
struct BP_Keypad_C_BP_HandleLanternOverlapBegin final
{
public:
	TArray<class AActor*>                         PlayerAttachedActors;                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USkeletalMeshComponent*                 PlayerMesh;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketToAttach;                                    // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Keypad_C_BP_HandleLanternOverlapBegin) == 0x000010, "Wrong alignment on BP_Keypad_C_BP_HandleLanternOverlapBegin");
static_assert(sizeof(BP_Keypad_C_BP_HandleLanternOverlapBegin) == 0x000060, "Wrong size on BP_Keypad_C_BP_HandleLanternOverlapBegin");
static_assert(offsetof(BP_Keypad_C_BP_HandleLanternOverlapBegin, PlayerAttachedActors) == 0x000000, "Member 'BP_Keypad_C_BP_HandleLanternOverlapBegin::PlayerAttachedActors' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_BP_HandleLanternOverlapBegin, PlayerMesh) == 0x000010, "Member 'BP_Keypad_C_BP_HandleLanternOverlapBegin::PlayerMesh' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_BP_HandleLanternOverlapBegin, SocketToAttach) == 0x000018, "Member 'BP_Keypad_C_BP_HandleLanternOverlapBegin::SocketToAttach' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_BP_HandleLanternOverlapBegin, SpawnTransform) == 0x000030, "Member 'BP_Keypad_C_BP_HandleLanternOverlapBegin::SpawnTransform' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.BP_OnKeypadPressed
// 0x0004 (0x0004 - 0x0000)
struct BP_Keypad_C_BP_OnKeypadPressed final
{
public:
	int32                                         KeyIndexPressed;                                   // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keypad_C_BP_OnKeypadPressed) == 0x000004, "Wrong alignment on BP_Keypad_C_BP_OnKeypadPressed");
static_assert(sizeof(BP_Keypad_C_BP_OnKeypadPressed) == 0x000004, "Wrong size on BP_Keypad_C_BP_OnKeypadPressed");
static_assert(offsetof(BP_Keypad_C_BP_OnKeypadPressed, KeyIndexPressed) == 0x000000, "Member 'BP_Keypad_C_BP_OnKeypadPressed::KeyIndexPressed' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4
// 0x0018 (0x0018 - 0x0000)
struct BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4 final
{
public:
	const class UCurveFloatDelegateTimer*         CurveFloatTimer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveElapsedTime;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTimeSinceLast;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4) == 0x000008, "Wrong alignment on BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4");
static_assert(sizeof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4) == 0x000018, "Wrong size on BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4");
static_assert(offsetof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4, CurveFloatTimer) == 0x000000, "Member 'BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4::CurveFloatTimer' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4, CurveElapsedTime) == 0x000008, "Member 'BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4::CurveElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4, CurveTimeSinceLast) == 0x00000C, "Member 'BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4::CurveTimeSinceLast' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4, CurveValue) == 0x000010, "Member 'BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4, CurveTime) == 0x000014, "Member 'BP_Keypad_C_CurveEvalTick_1117234D45361F2B8DD22A9E49175EB4::CurveTime' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.CurveFinished_1117234D45361F2B8DD22A9E49175EB4
// 0x0018 (0x0018 - 0x0000)
struct BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4 final
{
public:
	const class UCurveFloatDelegateTimer*         CurveFloatTimer;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveElapsedTime;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTimeSinceLast;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveValue;                                        // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTime;                                         // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4) == 0x000008, "Wrong alignment on BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4");
static_assert(sizeof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4) == 0x000018, "Wrong size on BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4");
static_assert(offsetof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4, CurveFloatTimer) == 0x000000, "Member 'BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4::CurveFloatTimer' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4, CurveElapsedTime) == 0x000008, "Member 'BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4::CurveElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4, CurveTimeSinceLast) == 0x00000C, "Member 'BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4::CurveTimeSinceLast' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4, CurveValue) == 0x000010, "Member 'BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4::CurveValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4, CurveTime) == 0x000014, "Member 'BP_Keypad_C_CurveFinished_1117234D45361F2B8DD22A9E49175EB4::CurveTime' has a wrong offset!");

// Function BP_Keypad.BP_Keypad_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct BP_Keypad_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetRenderTarget_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keypad_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Keypad_C_UserConstructionScript");
static_assert(sizeof(BP_Keypad_C_UserConstructionScript) == 0x000018, "Wrong size on BP_Keypad_C_UserConstructionScript");
static_assert(offsetof(BP_Keypad_C_UserConstructionScript, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_Keypad_C_UserConstructionScript::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_UserConstructionScript, CallFunc_GetRenderTarget_ReturnValue) == 0x000008, "Member 'BP_Keypad_C_UserConstructionScript::CallFunc_GetRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keypad_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_Keypad_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}

