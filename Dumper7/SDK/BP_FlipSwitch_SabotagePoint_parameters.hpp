#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlipSwitch_SabotagePoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FlipSwitch_SabotagePoint.BP_FlipSwitch_SabotagePoint_C.ExecuteUbergraph_BP_FlipSwitch_SabotagePoint
// 0x0018 (0x0018 - 0x0000)
struct BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZBaseInteractableComponent*    K2Node_ComponentBoundEvent_InteractableComponent;  // 0x0008(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bInNewState;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint) == 0x000008, "Wrong alignment on BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint");
static_assert(sizeof(BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint) == 0x000018, "Wrong size on BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint, EntryPoint) == 0x000000, "Member 'BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint, K2Node_ComponentBoundEvent_InteractableComponent) == 0x000008, "Member 'BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint::K2Node_ComponentBoundEvent_InteractableComponent' has a wrong offset!");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint, K2Node_ComponentBoundEvent_bInNewState) == 0x000010, "Member 'BP_FlipSwitch_SabotagePoint_C_ExecuteUbergraph_BP_FlipSwitch_SabotagePoint::K2Node_ComponentBoundEvent_bInNewState' has a wrong offset!");

// Function BP_FlipSwitch_SabotagePoint.BP_FlipSwitch_SabotagePoint_C.BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature final
{
public:
	const class USBZBaseInteractableComponent*    InteractableComponent_0;                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInNewState;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(sizeof(BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature, InteractableComponent_0) == 0x000000, "Member 'BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature::InteractableComponent_0' has a wrong offset!");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature, bInNewState) == 0x000008, "Member 'BP_FlipSwitch_SabotagePoint_C_BndEvt__BP_ElevatorDoor_ControlPanel_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteractableStateChangedDelegate__DelegateSignature::bInNewState' has a wrong offset!");

// Function BP_FlipSwitch_SabotagePoint.BP_FlipSwitch_SabotagePoint_C.PlayTurnOff
// 0x0004 (0x0004 - 0x0000)
struct BP_FlipSwitch_SabotagePoint_C_PlayTurnOff final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOff) == 0x000004, "Wrong alignment on BP_FlipSwitch_SabotagePoint_C_PlayTurnOff");
static_assert(sizeof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOff) == 0x000004, "Wrong size on BP_FlipSwitch_SabotagePoint_C_PlayTurnOff");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOff, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BP_FlipSwitch_SabotagePoint_C_PlayTurnOff::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function BP_FlipSwitch_SabotagePoint.BP_FlipSwitch_SabotagePoint_C.PlayTurnOn
// 0x0004 (0x0004 - 0x0000)
struct BP_FlipSwitch_SabotagePoint_C_PlayTurnOn final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOn) == 0x000004, "Wrong alignment on BP_FlipSwitch_SabotagePoint_C_PlayTurnOn");
static_assert(sizeof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOn) == 0x000004, "Wrong size on BP_FlipSwitch_SabotagePoint_C_PlayTurnOn");
static_assert(offsetof(BP_FlipSwitch_SabotagePoint_C_PlayTurnOn, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'BP_FlipSwitch_SabotagePoint_C_PlayTurnOn::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

}

