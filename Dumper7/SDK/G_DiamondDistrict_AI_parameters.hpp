#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: G_DiamondDistrict_AI

#include "Basic.hpp"


namespace SDK::Params
{

// Function G_DiamondDistrict_AI.G_DiamondDistrict_AI_C.ExecuteUbergraph_G_DiamondDistrict_AI
// 0x0030 (0x0030 - 0x0000)
struct G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZSpline*                             K2Node_ActorBoundEvent_Spline;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_Actor;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoteEvent_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASBZSpline*                             K2Node_ActorBoundEvent_Spline_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ActorBoundEvent_Actor_1;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI) == 0x000008, "Wrong alignment on G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI");
static_assert(sizeof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI) == 0x000030, "Wrong size on G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, EntryPoint) == 0x000000, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::EntryPoint' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, K2Node_ActorBoundEvent_Spline) == 0x000008, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::K2Node_ActorBoundEvent_Spline' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, K2Node_ActorBoundEvent_Actor) == 0x000010, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::K2Node_ActorBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, Temp_bool_IsClosed_Variable) == 0x000018, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, Temp_bool_Has_Been_Initd_Variable) == 0x000019, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, CallFunc_RemoteEvent_ReturnValue) == 0x00001A, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::CallFunc_RemoteEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, K2Node_ActorBoundEvent_Spline_1) == 0x000020, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::K2Node_ActorBoundEvent_Spline_1' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI, K2Node_ActorBoundEvent_Actor_1) == 0x000028, "Member 'G_DiamondDistrict_AI_C_ExecuteUbergraph_G_DiamondDistrict_AI::K2Node_ActorBoundEvent_Actor_1' has a wrong offset!");

// Function G_DiamondDistrict_AI.G_DiamondDistrict_AI_C.BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature final
{
public:
	class ASBZSpline*                             Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature) == 0x000008, "Wrong alignment on G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature");
static_assert(sizeof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature) == 0x000010, "Wrong size on G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature");
static_assert(offsetof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature, Spline) == 0x000000, "Member 'G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature::Spline' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature, Actor) == 0x000008, "Member 'G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders2_K2Node_ActorBoundEvent_1_SBZSplineOnEnter__DelegateSignature::Actor' has a wrong offset!");

// Function G_DiamondDistrict_AI.G_DiamondDistrict_AI_C.BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature final
{
public:
	class ASBZSpline*                             Spline;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature) == 0x000008, "Wrong alignment on G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature");
static_assert(sizeof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature) == 0x000010, "Wrong size on G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature");
static_assert(offsetof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature, Spline) == 0x000000, "Member 'G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature::Spline' has a wrong offset!");
static_assert(offsetof(G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature, Actor) == 0x000008, "Member 'G_DiamondDistrict_AI_C_BndEvt__G_DiamondDistrict_AI_SBZTrafficSpline_FirstResponders1_K2Node_ActorBoundEvent_0_SBZSplineOnEnter__DelegateSignature::Actor' has a wrong offset!");

}

