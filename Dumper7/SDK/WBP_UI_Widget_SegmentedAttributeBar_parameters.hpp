#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_UI_Widget_SegmentedAttributeBar

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar
// 0x0058 (0x0058 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewValue;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldPercentage;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewPercentage;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentValueSetup;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxValueSetup;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_PercentageSetup;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_StartOffset;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_EndOffset;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewValue_1;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_OldPercentage_1;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_NewPercentage_1;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar) == 0x000008, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar) == 0x000058, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, EntryPoint) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_NewValue) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_NewValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_OldPercentage) == 0x000008, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_OldPercentage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_NewPercentage) == 0x00000C, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_NewPercentage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_IsDesignTime) == 0x000010, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_CurrentValueSetup) == 0x000014, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_CurrentValueSetup' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_MaxValueSetup) == 0x000018, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_MaxValueSetup' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_PercentageSetup) == 0x00001C, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_PercentageSetup' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_StartOffset) == 0x000020, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_StartOffset' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_EndOffset) == 0x000024, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_EndOffset' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_MakeStruct_LinearColor) == 0x000028, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000038, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_NewValue_1) == 0x000040, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_NewValue_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_OldPercentage_1) == 0x000044, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_OldPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, K2Node_Event_NewPercentage_1) == 0x000048, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::K2Node_Event_NewPercentage_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_ExecuteUbergraph_WBP_UI_Widget_SegmentedAttributeBar::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.OnTraumaRatioChanged
// 0x0008 (0x0008 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged final
{
public:
	float                                         StartOffset;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndOffset;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged) == 0x000004, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged) == 0x000008, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged, StartOffset) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged::StartOffset' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged, EndOffset) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnTraumaRatioChanged::EndOffset' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.OnSetup
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup final
{
public:
	float                                         CurrentValueSetup;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValueSetup;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PercentageSetup;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup) == 0x000004, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup) == 0x00000C, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup, CurrentValueSetup) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup::CurrentValueSetup' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup, MaxValueSetup) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup::MaxValueSetup' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup, PercentageSetup) == 0x000008, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnSetup::PercentageSetup' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct) == 0x000001, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.OnMaxAttributeUpdate
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldPercentage;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewPercentage;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate) == 0x000004, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate) == 0x00000C, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate, NewValue) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate, OldPercentage) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate::OldPercentage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate, NewPercentage) == 0x000008, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnMaxAttributeUpdate::NewPercentage' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.OnCurrentAttributeUpdate
// 0x000C (0x000C - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldPercentage;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewPercentage;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate) == 0x000004, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate) == 0x00000C, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate, NewValue) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate::NewValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate, OldPercentage) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate::OldPercentage' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate, NewPercentage) == 0x000008, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_OnCurrentAttributeUpdate::NewPercentage' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.SetShaderParams
// 0x00B8 (0x00B8 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams final
{
public:
	struct FLinearColor                           FinalTraumaColor;                                  // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalLaggingColor;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalMainColor;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FinalBackgroundColor;                              // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USBZArmorSettings*                CallFunc_Get_ReturnValue;                          // 0x0050(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSBZArmorChunkTypeData                 CallFunc_GetChunkData_ReturnValue;                 // 0x0058(0x0054)(ConstParm, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams) == 0x000008, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams) == 0x0000B8, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, FinalTraumaColor) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::FinalTraumaColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, FinalLaggingColor) == 0x000010, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::FinalLaggingColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, FinalMainColor) == 0x000020, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::FinalMainColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, FinalBackgroundColor) == 0x000030, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::FinalBackgroundColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, Temp_bool_Variable) == 0x000040, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, Temp_float_Variable) == 0x000044, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, Temp_float_Variable_1) == 0x000048, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, CallFunc_Get_ReturnValue) == 0x000050, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::CallFunc_Get_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, CallFunc_GetChunkData_ReturnValue) == 0x000058, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::CallFunc_GetChunkData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, K2Node_Select_Default) == 0x0000AC, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000B0, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderParams::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.SetShaderProgress
// 0x0018 (0x0018 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress) == 0x000004, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress) == 0x000018, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress, Progress) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress::Progress' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress, K2Node_MakeStruct_LinearColor) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000015, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_SetShaderProgress::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.Set Flashing
// 0x0010 (0x0010 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing final
{
public:
	bool                                          bIsFlashing;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing) == 0x000008, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing) == 0x000010, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing, bIsFlashing) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing::bIsFlashing' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_Set_Flashing::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_UI_Widget_SegmentedAttributeBar.WBP_UI_Widget_SegmentedAttributeBar_C.UpdateVisibility
// 0x0005 (0x0005 - 0x0000)
struct WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility) == 0x000001, "Wrong alignment on WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility");
static_assert(sizeof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility) == 0x000005, "Wrong size on WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility, Temp_bool_Variable) == 0x000000, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility, Temp_byte_Variable) == 0x000001, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000003, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility, K2Node_Select_Default) == 0x000004, "Member 'WBP_UI_Widget_SegmentedAttributeBar_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");

}

