#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Breakable_ATM_01

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Breakable_ATM_01.BP_Breakable_ATM_01_C
// 0x00B8 (0x0390 - 0x02D8)
class ABP_Breakable_ATM_01_C final : public ASBZBreakableMachine
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAkComponent*                           Ak;                                                // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Case_interactCollision;                            // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_ATM_Money_Stolen;                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case_04;                                           // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case_03;                                           // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case_02;                                           // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Case_01;                                           // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_MoneyEjects;                                    // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZCosmeticDestructionComponent*       SBZCosmeticDestruction;                            // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ATM_base;                                          // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OpenBoxes_timeline_case_04_B3463F3943DC51CF122A84A6F58CE9F5; // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenBoxes_timeline_case_03_B3463F3943DC51CF122A84A6F58CE9F5; // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenBoxes_timeline_case_02_B3463F3943DC51CF122A84A6F58CE9F5; // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenBoxes_timeline_case_01_B3463F3943DC51CF122A84A6F58CE9F5; // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenBoxes_timeline__Direction_B3463F3943DC51CF122A84A6F58CE9F5; // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenBoxes_timeline;                                // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenDoor_timeline_yaw_14607686432B17691C7FB999E9C680F8; // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenDoor_timeline__Direction_14607686432B17691C7FB999E9C680F8; // 0x036C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenDoor_timeline;                                 // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               AtmDMI;                                            // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Tint;                                              // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Breakable_ATM_01(int32 EntryPoint);
	void BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_3_SBZOnInteractableStateChangedDelegate__DelegateSignature(const class USBZBaseInteractableComponent* InteractableComponent_0, bool bInNewState);
	void ReceiveBeginPlay();
	void BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__BP_Breakable_ATM_01_InteractableComponent_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BP_OnStateChanged(ESBZBreakableMachineState OldState, ESBZBreakableMachineState NewState, bool bDoCosmetics);
	void BndEvt__BP_ATM_02_SBZCosmeticDestruction_K2Node_ComponentBoundEvent_0_SBZCosmeticDestructionComponenteSignature__DelegateSignature(ESBZCosmeticDestructionType Type, const struct FSBZCosmeticDestructionContext& HitContext);
	void OpenBoxes_timeline__UpdateFunc();
	void OpenBoxes_timeline__FinishedFunc();
	void OpenDoor_timeline__UpdateFunc();
	void OpenDoor_timeline__FinishedFunc();
	void UserConstructionScript();
	void SetOutline(bool Enabled, ESBZBreakableMachineState State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Breakable_ATM_01_C">();
	}
	static class ABP_Breakable_ATM_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Breakable_ATM_01_C>();
	}
};
static_assert(alignof(ABP_Breakable_ATM_01_C) == 0x000008, "Wrong alignment on ABP_Breakable_ATM_01_C");
static_assert(sizeof(ABP_Breakable_ATM_01_C) == 0x000390, "Wrong size on ABP_Breakable_ATM_01_C");
static_assert(offsetof(ABP_Breakable_ATM_01_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_Breakable_ATM_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Ak) == 0x0002E0, "Member 'ABP_Breakable_ATM_01_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Case_interactCollision) == 0x0002E8, "Member 'ABP_Breakable_ATM_01_C::Case_interactCollision' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, FX_ATM_Money_Stolen) == 0x0002F0, "Member 'ABP_Breakable_ATM_01_C::FX_ATM_Money_Stolen' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, SBZOutline) == 0x0002F8, "Member 'ABP_Breakable_ATM_01_C::SBZOutline' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Case_04) == 0x000300, "Member 'ABP_Breakable_ATM_01_C::Case_04' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Case_03) == 0x000308, "Member 'ABP_Breakable_ATM_01_C::Case_03' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Case_02) == 0x000310, "Member 'ABP_Breakable_ATM_01_C::Case_02' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Case_01) == 0x000318, "Member 'ABP_Breakable_ATM_01_C::Case_01' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Door) == 0x000320, "Member 'ABP_Breakable_ATM_01_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, FX_MoneyEjects) == 0x000328, "Member 'ABP_Breakable_ATM_01_C::FX_MoneyEjects' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, SBZCosmeticDestruction) == 0x000330, "Member 'ABP_Breakable_ATM_01_C::SBZCosmeticDestruction' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, ATM_base) == 0x000338, "Member 'ABP_Breakable_ATM_01_C::ATM_base' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, DefaultSceneRoot) == 0x000340, "Member 'ABP_Breakable_ATM_01_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline_case_04_B3463F3943DC51CF122A84A6F58CE9F5) == 0x000348, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline_case_04_B3463F3943DC51CF122A84A6F58CE9F5' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline_case_03_B3463F3943DC51CF122A84A6F58CE9F5) == 0x00034C, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline_case_03_B3463F3943DC51CF122A84A6F58CE9F5' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline_case_02_B3463F3943DC51CF122A84A6F58CE9F5) == 0x000350, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline_case_02_B3463F3943DC51CF122A84A6F58CE9F5' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline_case_01_B3463F3943DC51CF122A84A6F58CE9F5) == 0x000354, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline_case_01_B3463F3943DC51CF122A84A6F58CE9F5' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline__Direction_B3463F3943DC51CF122A84A6F58CE9F5) == 0x000358, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline__Direction_B3463F3943DC51CF122A84A6F58CE9F5' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenBoxes_timeline) == 0x000360, "Member 'ABP_Breakable_ATM_01_C::OpenBoxes_timeline' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenDoor_timeline_yaw_14607686432B17691C7FB999E9C680F8) == 0x000368, "Member 'ABP_Breakable_ATM_01_C::OpenDoor_timeline_yaw_14607686432B17691C7FB999E9C680F8' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenDoor_timeline__Direction_14607686432B17691C7FB999E9C680F8) == 0x00036C, "Member 'ABP_Breakable_ATM_01_C::OpenDoor_timeline__Direction_14607686432B17691C7FB999E9C680F8' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, OpenDoor_timeline) == 0x000370, "Member 'ABP_Breakable_ATM_01_C::OpenDoor_timeline' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, AtmDMI) == 0x000378, "Member 'ABP_Breakable_ATM_01_C::AtmDMI' has a wrong offset!");
static_assert(offsetof(ABP_Breakable_ATM_01_C, Tint) == 0x000380, "Member 'ABP_Breakable_ATM_01_C::Tint' has a wrong offset!");

}

