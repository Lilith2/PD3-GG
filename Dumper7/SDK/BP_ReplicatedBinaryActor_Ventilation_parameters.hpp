#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplicatedBinaryActor_Ventilation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_structs.hpp"


namespace SDK::Params
{

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation
// 0x04D0 (0x04D0 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bStateToChangeTo;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bDoCosmetics;                         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_4;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_4;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_ComponentBoundEvent_PoolComponent;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_Hits;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bDoCosmetics;           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  K2Node_ComponentBoundEvent_DamageContext;          // 0x0048(0x0018)(ConstParm, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0060(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00F0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0180(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0210(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x02A0(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x0330(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x03C0(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x03D8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_3;         // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_3;           // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3; // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_2;         // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_2;           // 0x0410(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2; // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable_1;         // 0x0420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor_1;           // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1; // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USBZBaseInteractableComponent*          K2Node_ComponentBoundEvent_Interactable;           // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                K2Node_ComponentBoundEvent_Interactor;             // 0x0440(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor; // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0458(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x0468(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_485[0x3];                                      // 0x0485(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x0488(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostEvent_ReturnValue_1;                  // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_3;                          // 0x049C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x04B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x04B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x04B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_3;                            // 0x04B8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation) == 0x0004D0, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, EntryPoint) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_delegate_Variable) == 0x000004, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_bool_Has_Been_Initd_Variable) == 0x000018, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_bool_IsClosed_Variable) == 0x000019, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_Event_bStateToChangeTo) == 0x00001A, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_Event_bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_Event_bDoCosmetics) == 0x00001B, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_Event_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactable_4) == 0x000020, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactable_4' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactor_4) == 0x000028, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactor_4' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4) == 0x000030, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_4' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_PoolComponent) == 0x000038, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_PoolComponent' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Hits) == 0x000040, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Hits' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bDoCosmetics) == 0x000044, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_DamageContext) == 0x000048, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_DamageContext' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000060, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000F0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000180, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000210, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0002A0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x000330, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_delegate_Variable_1) == 0x0003C0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0003D4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_struct_Variable) == 0x0003D8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_PostAkEvent_ReturnValue) == 0x0003E8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactable_3) == 0x0003F0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactable_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactor_3) == 0x0003F8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactor_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3) == 0x000400, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactable_2) == 0x000408, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactable_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactor_2) == 0x000410, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactor_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2) == 0x000418, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactable_1) == 0x000420, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactor_1) == 0x000428, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactor_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1) == 0x000430, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactable) == 0x000438, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_Interactor) == 0x000440, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor) == 0x000448, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::K2Node_ComponentBoundEvent_bIsLocallyControlledInteractor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00044C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000450, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_struct_Variable_1) == 0x000458, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_delegate_Variable_2) == 0x000468, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_PostEvent_ReturnValue) == 0x00047C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000480, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000484, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_struct_Variable_2) == 0x000488, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_PostEvent_ReturnValue_1) == 0x000498, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_PostEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_delegate_Variable_3) == 0x00049C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_delegate_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_IsDedicatedServer_ReturnValue) == 0x0004B0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0004B1, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0004B2, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x0004B3, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x0004B4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, Temp_struct_Variable_3) == 0x0004B8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation, CallFunc_PostAkEvent_ReturnValue_1) == 0x0004C8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_ExecuteUbergraph_BP_ReplicatedBinaryActor_Ventilation::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_7_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_6_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZInteractable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature final
{
public:
	class UActorComponent*                        PoolComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Hits;                                              // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDoCosmetics;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSBZPropDamageContext                  DamageContext;                                     // 0x0010(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature) == 0x000028, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, PoolComponent) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::PoolComponent' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, Hits) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::Hits' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, bDoCosmetics) == 0x00000C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::bDoCosmetics' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature, DamageContext) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActor_Ventilation_SBZPropDamage_K2Node_ComponentBoundEvent_1_SBZPropDamageHitsSignature__DelegateSignature::DamageContext' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature final
{
public:
	class USBZBaseInteractableComponent*          Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USBZInteractorComponent*                Interactor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsLocallyControlledInteractor;                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000008, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature) == 0x000018, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactable) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, Interactor) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::Interactor' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature, bIsLocallyControlledInteractor) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_BndEvt__BP_ReplicatedBinaryActorVent_SBZInteractable_K2Node_ComponentBoundEvent_2_SBZOnInteraction__DelegateSignature::bIsLocallyControlledInteractor' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.OnStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged final
{
public:
	bool                                          bStateToChangeTo;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bDoCosmetics;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged) == 0x000001, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged) == 0x000002, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged, bStateToChangeTo) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged::bStateToChangeTo' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged, bDoCosmetics) == 0x000001, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_OnStateChanged::bDoCosmetics' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.rotateAroundAxis
// 0x005C (0x005C - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis final
{
public:
	struct FVector2D                              Pivot;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Point;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RotatedPoint;                                      // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis) == 0x000004, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis) == 0x00005C, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, Pivot) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::Pivot' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, Point) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::Point' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, Angle) == 0x000010, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::Angle' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, RotatedPoint) == 0x000014, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::RotatedPoint' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_DegCos_ReturnValue) == 0x00001C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_DegSin_ReturnValue) == 0x000020, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000024, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000040, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000054, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateAroundAxis::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function BP_ReplicatedBinaryActor_Ventilation.BP_ReplicatedBinaryActor_Ventilation_C.rotateDoorCollisionAroundBase
// 0x0194 (0x0194 - 0x0000)
struct BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector_X;                            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_rotateAroundAxis_rotatedPoint;            // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0104(0x0090)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase) == 0x000004, "Wrong alignment on BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase");
static_assert(sizeof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase) == 0x000194, "Wrong size on BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, InputPin) == 0x000000, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::InputPin' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_MakeRotator_ReturnValue) == 0x000008, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000014, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_X) == 0x0000B0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_Y) == 0x0000B4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_X_1) == 0x0000BC, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_Y_1) == 0x0000C0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector_Z_1) == 0x0000C4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000CC, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000D0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_MakeVector2D_ReturnValue) == 0x0000D4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000DC, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_rotateAroundAxis_rotatedPoint) == 0x0000E4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_rotateAroundAxis_rotatedPoint' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector2D_X) == 0x0000EC, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_BreakVector2D_Y) == 0x0000F0, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F4, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000104, "Member 'BP_ReplicatedBinaryActor_Ventilation_C_RotateDoorCollisionAroundBase::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}

