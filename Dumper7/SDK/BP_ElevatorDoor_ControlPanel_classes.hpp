#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ElevatorDoor_ControlPanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AkAudio_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ElevatorDoor_ControlPanel.BP_ElevatorDoor_ControlPanel_C
// 0x0058 (0x0330 - 0x02D8)
class ABP_ElevatorDoor_ControlPanel_C final : public ASBZReplicatedBinaryStateActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USBZBinaryStateComponent*               WaypointSBZBinaryState;                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZAIObjectiveComponent*               SBZAIObjective;                                    // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline;                                        // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkComponent*                           Ak;                                                // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZInteractableComponent*              Interactable;                                      // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnInteracted;                                      // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         LocalMarkerID;                                     // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnInteracted__DelegateSignature();
	void ExecuteUbergraph_BP_ElevatorDoor_ControlPanel(int32 EntryPoint);
	void BndEvt__BP_ElevatorDoor_ControlPanel_WaypointSBZBinaryState_K2Node_ComponentBoundEvent_2_SBZBinaryStateChangedSignature__DelegateSignature(bool bState_0, bool bDoCosmetics);
	void BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_1_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__BP_ElevatorDoor_ControlPanel_Interactable_K2Node_ComponentBoundEvent_0_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void OnStateChanged(bool bStateToChangeTo, bool bDoCosmetics);
	void UserConstructionScript();
	void SetInteractionEnable(bool Interaction_Enabled, bool WaypointEnabled);
	void PlayTurnOff();
	void PlayTurnOn();
	void SetMarker(const class USBZMarkerDataAsset* MarkerDataAsset);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ElevatorDoor_ControlPanel_C">();
	}
	static class ABP_ElevatorDoor_ControlPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ElevatorDoor_ControlPanel_C>();
	}
};
static_assert(alignof(ABP_ElevatorDoor_ControlPanel_C) == 0x000008, "Wrong alignment on ABP_ElevatorDoor_ControlPanel_C");
static_assert(sizeof(ABP_ElevatorDoor_ControlPanel_C) == 0x000330, "Wrong size on ABP_ElevatorDoor_ControlPanel_C");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, UberGraphFrame) == 0x0002D8, "Member 'ABP_ElevatorDoor_ControlPanel_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, WaypointSBZBinaryState) == 0x0002E0, "Member 'ABP_ElevatorDoor_ControlPanel_C::WaypointSBZBinaryState' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, SBZAIObjective) == 0x0002E8, "Member 'ABP_ElevatorDoor_ControlPanel_C::SBZAIObjective' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, SBZOutline) == 0x0002F0, "Member 'ABP_ElevatorDoor_ControlPanel_C::SBZOutline' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, Ak) == 0x0002F8, "Member 'ABP_ElevatorDoor_ControlPanel_C::Ak' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, Interactable) == 0x000300, "Member 'ABP_ElevatorDoor_ControlPanel_C::Interactable' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, Mesh) == 0x000308, "Member 'ABP_ElevatorDoor_ControlPanel_C::Mesh' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, DefaultSceneRoot) == 0x000310, "Member 'ABP_ElevatorDoor_ControlPanel_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, OnInteracted) == 0x000318, "Member 'ABP_ElevatorDoor_ControlPanel_C::OnInteracted' has a wrong offset!");
static_assert(offsetof(ABP_ElevatorDoor_ControlPanel_C, LocalMarkerID) == 0x000328, "Member 'ABP_ElevatorDoor_ControlPanel_C::LocalMarkerID' has a wrong offset!");

}

