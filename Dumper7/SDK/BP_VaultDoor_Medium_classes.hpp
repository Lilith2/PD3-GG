#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VaultDoor_Medium

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Starbreeze_structs.hpp"
#include "Starbreeze_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VaultDoor_Medium.BP_VaultDoor_Medium_C
// 0x0078 (0x0648 - 0x05D0)
class ABP_VaultDoor_Medium_C final : public ASBZInteractableDoor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Handle;                                            // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Handle_Coll;                                       // 0x05E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZOutlineComponent*                   SBZOutline;                                        // 0x05E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZDoorBoxComponent*                   SlideSprintCollisionBoxBackward;                   // 0x05F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USBZDoorBoxComponent*                   SlideSprintCollisionBoxForward;                    // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DoorBox;                                           // 0x0600(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Door;                                              // 0x0608(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Hinge;                                             // 0x0610(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Frame;                                             // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Unlock_Yaw_22663A444CA7144E39F1E681CF47D6BF;       // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Unlock__Direction_22663A444CA7144E39F1E681CF47D6BF; // 0x0624(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Unlock;                                            // 0x0628(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Open_Yaw_849D7B9F4E577A5EBF7D389FF1594510;         // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Open__Direction_849D7B9F4E577A5EBF7D389FF1594510;  // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_635[0x3];                                      // 0x0635(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Open;                                              // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MarkerID;                                          // 0x0640(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_VaultDoor_Medium(int32 EntryPoint);
	void BndEvt__BP_VaultDoor_Medium_Interactable_K2Node_ComponentBoundEvent_5_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void BndEvt__BP_VaultDoor_Medium_Interactable_K2Node_ComponentBoundEvent_3_SBZOnInteraction__DelegateSignature(class USBZBaseInteractableComponent* Interactable_0, class USBZInteractorComponent* Interactor, bool bIsLocallyControlledInteractor);
	void OnStateChanged(ESBZGateState OldState, ESBZGateState NewState, bool bIsInitialStateChange);
	void Unlock__UpdateFunc();
	void Unlock__FinishedFunc();
	void Open__UpdateFunc();
	void Open__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VaultDoor_Medium_C">();
	}
	static class ABP_VaultDoor_Medium_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VaultDoor_Medium_C>();
	}
};
static_assert(alignof(ABP_VaultDoor_Medium_C) == 0x000008, "Wrong alignment on ABP_VaultDoor_Medium_C");
static_assert(sizeof(ABP_VaultDoor_Medium_C) == 0x000648, "Wrong size on ABP_VaultDoor_Medium_C");
static_assert(offsetof(ABP_VaultDoor_Medium_C, UberGraphFrame) == 0x0005D0, "Member 'ABP_VaultDoor_Medium_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Handle) == 0x0005D8, "Member 'ABP_VaultDoor_Medium_C::Handle' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Handle_Coll) == 0x0005E0, "Member 'ABP_VaultDoor_Medium_C::Handle_Coll' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, SBZOutline) == 0x0005E8, "Member 'ABP_VaultDoor_Medium_C::SBZOutline' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, SlideSprintCollisionBoxBackward) == 0x0005F0, "Member 'ABP_VaultDoor_Medium_C::SlideSprintCollisionBoxBackward' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, SlideSprintCollisionBoxForward) == 0x0005F8, "Member 'ABP_VaultDoor_Medium_C::SlideSprintCollisionBoxForward' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, DoorBox) == 0x000600, "Member 'ABP_VaultDoor_Medium_C::DoorBox' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Door) == 0x000608, "Member 'ABP_VaultDoor_Medium_C::Door' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Hinge) == 0x000610, "Member 'ABP_VaultDoor_Medium_C::Hinge' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Frame) == 0x000618, "Member 'ABP_VaultDoor_Medium_C::Frame' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Unlock_Yaw_22663A444CA7144E39F1E681CF47D6BF) == 0x000620, "Member 'ABP_VaultDoor_Medium_C::Unlock_Yaw_22663A444CA7144E39F1E681CF47D6BF' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Unlock__Direction_22663A444CA7144E39F1E681CF47D6BF) == 0x000624, "Member 'ABP_VaultDoor_Medium_C::Unlock__Direction_22663A444CA7144E39F1E681CF47D6BF' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Unlock) == 0x000628, "Member 'ABP_VaultDoor_Medium_C::Unlock' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Open_Yaw_849D7B9F4E577A5EBF7D389FF1594510) == 0x000630, "Member 'ABP_VaultDoor_Medium_C::Open_Yaw_849D7B9F4E577A5EBF7D389FF1594510' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Open__Direction_849D7B9F4E577A5EBF7D389FF1594510) == 0x000634, "Member 'ABP_VaultDoor_Medium_C::Open__Direction_849D7B9F4E577A5EBF7D389FF1594510' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, Open) == 0x000638, "Member 'ABP_VaultDoor_Medium_C::Open' has a wrong offset!");
static_assert(offsetof(ABP_VaultDoor_Medium_C, MarkerID) == 0x000640, "Member 'ABP_VaultDoor_Medium_C::MarkerID' has a wrong offset!");

}

